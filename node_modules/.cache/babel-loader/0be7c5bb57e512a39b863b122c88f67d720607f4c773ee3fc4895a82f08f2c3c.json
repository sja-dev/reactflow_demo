{"ast":null,"code":"import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport shallow from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\nconst errorMessage = '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#100';\nfunction useStore(selector, equalityFn) {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(errorMessage);\n  }\n  return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(errorMessage);\n  }\n  return useMemo(() => ({\n    getState: store.getState,\n    setState: store.setState,\n    subscribe: store.subscribe,\n    destroy: store.destroy\n  }), [store]);\n};\nconst selector$f = s => s.userSelectionActive ? 'none' : 'all';\nfunction Panel(_ref) {\n  let {\n    position,\n    children,\n    className,\n    style,\n    ...rest\n  } = _ref;\n  const pointerEvents = useStore(selector$f);\n  const positionClasses = `${position}`.split('-');\n  return jsx(\"div\", {\n    className: cc(['react-flow__panel', className, ...positionClasses]),\n    style: {\n      ...style,\n      pointerEvents\n    },\n    ...rest,\n    children: children\n  });\n}\nfunction Attribution(_ref2) {\n  let {\n    proOptions,\n    position = 'bottom-right'\n  } = _ref2;\n  if (proOptions?.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nconst EdgeText = _ref3 => {\n  let {\n    x,\n    y,\n    label,\n    labelStyle = {},\n    labelShowBg = true,\n    labelBgStyle = {},\n    labelBgPadding = [2, 4],\n    labelBgBorderRadius = 2,\n    children,\n    className,\n    ...rest\n  } = _ref3;\n  const edgeRef = useRef(null);\n  const [edgeTextBbox, setEdgeTextBbox] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(() => {\n    if (edgeRef.current) {\n      const textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", {\n    transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`,\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden',\n    ...rest,\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  });\n};\nvar EdgeText$1 = memo(EdgeText);\nconst getDimensions = node => ({\n  width: node.offsetWidth,\n  height: node.offsetHeight\n});\nconst clamp = function (val) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nconst clampPosition = function () {\n  let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  let extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\nconst getHostForElement = element => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n  x: Math.min(box1.x, box2.x),\n  y: Math.min(box1.y, box2.y),\n  x2: Math.max(box1.x2, box2.x2),\n  y2: Math.max(box1.y2, box2.y2)\n});\nconst rectToBox = _ref4 => {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = _ref4;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nconst boxToRect = _ref5 => {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref5;\n  return {\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nconst nodeToRect = node => ({\n  ...(node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }),\n  width: node.width || 0,\n  height: node.height || 0\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n  const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = obj => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = n => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = message => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(`[React Flow]: ${message}`);\n  }\n};\nconst isReactKeyboardEvent = event => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n  const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  const target = kbEvent.composedPath?.()?.[0] || event.target;\n  // we want to be able to do a multi selection event if we are in an input field\n  if (event.ctrlKey || event.metaKey || event.shiftKey) {\n    return false;\n  }\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable') || !!target?.closest('.nokey');\n}\nconst BaseEdge = _ref6 => {\n  let {\n    path,\n    labelX,\n    labelY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth = 20\n  } = _ref6;\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth,\n      className: \"react-flow__edge-interaction\"\n    }), label && isNumeric(labelX) && isNumeric(labelY) ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nconst getMarkerEnd = (markerType, markerEndId) => {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return `url(#${markerEndId})`;\n  }\n  return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const edge = getState().edges.find(e => e.id === id);\n    if (edge) {\n      handler(event, {\n        ...edge\n      });\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref7;\n  const xOffset = Math.abs(targetX - sourceX) / 2;\n  const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  const yOffset = Math.abs(targetY - sourceY) / 2;\n  const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  } = _ref8;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  const offsetX = Math.abs(centerX - sourceX);\n  const offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2\n  } = _ref9;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top\n  } = _ref10;\n  const [sourceControlX, sourceControlY] = getControl({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY\n  });\n  const [targetControlX, targetControlY] = getControl({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst SimpleBezierEdge = memo(_ref11 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref11;\n  const [path, labelX, labelY] = getSimpleBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nconst handleDirections = {\n  [Position.Left]: {\n    x: -1,\n    y: 0\n  },\n  [Position.Right]: {\n    x: 1,\n    y: 0\n  },\n  [Position.Top]: {\n    x: 0,\n    y: -1\n  },\n  [Position.Bottom]: {\n    x: 0,\n    y: 1\n  }\n};\nconst getDirection = _ref12 => {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target\n  } = _ref12;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target,\n    targetPosition = Position.Top,\n    center,\n    offset\n  } = _ref13;\n  const sourceDir = handleDirections[sourcePosition];\n  const targetDir = handleDirections[targetPosition];\n  const sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  const targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  const dir = getDirection({\n    source: sourceGapped,\n    sourcePosition,\n    target: targetGapped\n  });\n  const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  const currDir = dir[dirAccessor];\n  let points = [];\n  let centerX, centerY;\n  const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n    sourceX: source.x,\n    sourceY: source.y,\n    targetX: target.x,\n    targetY: target.y\n  });\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    const verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    const horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    const sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    const targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      const flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    centerX = points[0].x;\n    centerY = points[0].y;\n  }\n  const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  const {\n    x,\n    y\n  } = b;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return `L${x} ${y}`;\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    const xDir = a.x < c.x ? -1 : 1;\n    const yDir = a.y < c.y ? 1 : -1;\n    return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n  }\n  const xDir = a.x < c.x ? 1 : -1;\n  const yDir = a.y < c.y ? -1 : 1;\n  return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath(_ref14) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    borderRadius = 5,\n    centerX,\n    centerY,\n    offset = 20\n  } = _ref14;\n  const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n    source: {\n      x: sourceX,\n      y: sourceY\n    },\n    sourcePosition,\n    target: {\n      x: targetX,\n      y: targetY\n    },\n    targetPosition,\n    center: {\n      x: centerX,\n      y: centerY\n    },\n    offset\n  });\n  const path = points.reduce((res, p, i) => {\n    let segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(_ref15 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref15;\n  const [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    borderRadius: pathOptions?.borderRadius,\n    offset: pathOptions?.offset\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nconst StepEdge = memo(props => jsx(SmoothStepEdge, {\n  ...props,\n  pathOptions: useMemo(() => ({\n    borderRadius: 0,\n    offset: props.pathOptions?.offset\n  }), [props.pathOptions?.offset])\n}));\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref16;\n  const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(_ref17 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref17;\n  const [path, labelX, labelY] = getStraightPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2,\n    c\n  } = _ref18;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    curvature = 0.25\n  } = _ref19;\n  const [sourceControlX, sourceControlY] = getControlWithCurvature({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY,\n    c: curvature\n  });\n  const [targetControlX, targetControlY] = getControlWithCurvature({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY,\n    c: curvature\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst BezierEdge = memo(_ref20 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref20;\n  const [path, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: pathOptions?.curvature\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n  const nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\n\n// checks if element below mouse is a handle and returns connection in form of an object { source: 123, target: 312 }\nfunction checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc) {\n  const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\n  const elementBelowIsTarget = elementBelow?.classList.contains('target') || false;\n  const elementBelowIsSource = elementBelow?.classList.contains('source') || false;\n  const result = {\n    elementBelow,\n    isValid: false,\n    connection: {\n      source: null,\n      target: null,\n      sourceHandle: null,\n      targetHandle: null\n    },\n    isHoveringHandle: false\n  };\n  if (elementBelow && (elementBelowIsTarget || elementBelowIsSource)) {\n    result.isHoveringHandle = true;\n    const elementBelowNodeId = elementBelow.getAttribute('data-nodeid');\n    const elementBelowHandleId = elementBelow.getAttribute('data-handleid');\n    const connection = isTarget ? {\n      source: elementBelowNodeId,\n      sourceHandle: elementBelowHandleId,\n      target: nodeId,\n      targetHandle: handleId\n    } : {\n      source: nodeId,\n      sourceHandle: handleId,\n      target: elementBelowNodeId,\n      targetHandle: elementBelowHandleId\n    };\n    result.connection = connection;\n    // in strict mode we don't allow target to target or source to source connections\n    const isValid = connectionMode === ConnectionMode.Strict ? isTarget && elementBelowIsSource || !isTarget && elementBelowIsTarget : elementBelowNodeId !== nodeId || elementBelowHandleId !== handleId;\n    if (isValid) {\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction resetRecentHandle(hoveredHandle) {\n  hoveredHandle?.classList.remove('react-flow__handle-valid');\n  hoveredHandle?.classList.remove('react-flow__handle-connecting');\n}\nfunction handleMouseDown(_ref21) {\n  let {\n    event,\n    handleId,\n    nodeId,\n    onConnect,\n    isTarget,\n    getState,\n    setState,\n    isValidConnection,\n    elementEdgeUpdaterType,\n    onEdgeUpdateEnd\n  } = _ref21;\n  const reactFlowNode = event.target.closest('.react-flow');\n  // when react-flow is used inside a shadow root we can't use document\n  const doc = getHostForElement(event.target);\n  if (!doc) {\n    return;\n  }\n  const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\n  const elementBelowIsTarget = elementBelow?.classList.contains('target');\n  const elementBelowIsSource = elementBelow?.classList.contains('source');\n  if (!reactFlowNode || !elementBelowIsTarget && !elementBelowIsSource && !elementEdgeUpdaterType) {\n    return;\n  }\n  const {\n    onConnectStart,\n    connectionMode\n  } = getState();\n  const handleType = elementEdgeUpdaterType ? elementEdgeUpdaterType : elementBelowIsTarget ? 'target' : 'source';\n  const containerBounds = reactFlowNode.getBoundingClientRect();\n  let recentHoveredHandle;\n  setState({\n    connectionPosition: {\n      x: event.clientX - containerBounds.left,\n      y: event.clientY - containerBounds.top\n    },\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType\n  });\n  onConnectStart?.(event, {\n    nodeId,\n    handleId,\n    handleType\n  });\n  function onMouseMove(event) {\n    setState({\n      connectionPosition: {\n        x: event.clientX - containerBounds.left,\n        y: event.clientY - containerBounds.top\n      }\n    });\n    const {\n      connection,\n      elementBelow,\n      isValid,\n      isHoveringHandle\n    } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\n    if (!isHoveringHandle) {\n      return resetRecentHandle(recentHoveredHandle);\n    }\n    if (connection.source !== connection.target && elementBelow) {\n      resetRecentHandle(recentHoveredHandle);\n      recentHoveredHandle = elementBelow;\n      elementBelow.classList.add('react-flow__handle-connecting');\n      elementBelow.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onMouseUp(event) {\n    const {\n      connection,\n      isValid\n    } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\n    if (isValid) {\n      onConnect?.(connection);\n    }\n    getState().onConnectEnd?.(event);\n    if (elementEdgeUpdaterType && onEdgeUpdateEnd) {\n      onEdgeUpdateEnd(event);\n    }\n    resetRecentHandle(recentHoveredHandle);\n    setState({\n      connectionNodeId: null,\n      connectionHandleId: null,\n      connectionHandleType: null\n    });\n    doc.removeEventListener('mousemove', onMouseMove);\n    doc.removeEventListener('mouseup', onMouseUp);\n  }\n  doc.addEventListener('mousemove', onMouseMove);\n  doc.addEventListener('mouseup', onMouseUp);\n}\nconst isEdge = element => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = element => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const outgoerIds = edges.filter(e => e.source === node.id).map(e => e.target);\n  return nodes.filter(n => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const incomersIds = edges.filter(e => e.target === node.id).map(e => e.source);\n  return nodes.filter(n => incomersIds.includes(n.id));\n};\nconst getEdgeId = _ref22 => {\n  let {\n    source,\n    sourceHandle,\n    target,\n    targetHandle\n  } = _ref22;\n  return `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\n};\nconst getMarkerId = (marker, rfId) => {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  const idPrefix = rfId ? `${rfId}__` : '';\n  return `${idPrefix}${Object.keys(marker).sort().map(key => `${key}=${marker[key]}`).join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n  return edges.some(el => el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle));\n};\nconst addEdge = (edgeParams, edges) => {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn(\"Can't create edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\n    return edges;\n  }\n  let edge;\n  if (isEdge(edgeParams)) {\n    edge = {\n      ...edgeParams\n    };\n  } else {\n    edge = {\n      ...edgeParams,\n      id: getEdgeId(edgeParams)\n    };\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges) => {\n  if (!newConnection.source || !newConnection.target) {\n    devWarn(\"Can't create a new edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\n    return edges;\n  }\n  const foundEdge = edges.find(e => e.id === oldEdge.id);\n  if (!foundEdge) {\n    devWarn(`The old edge with id=${oldEdge.id} does not exist. Help: https://reactflow.dev/error#700`);\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  const edge = {\n    ...oldEdge,\n    id: getEdgeId(newConnection),\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  };\n  return edges.filter(e => e.id !== oldEdge.id).concat(edge);\n};\nconst pointToRendererPoint = (_ref23, _ref24, snapToGrid, _ref25) => {\n  let {\n    x,\n    y\n  } = _ref23;\n  let [tx, ty, tScale] = _ref24;\n  let [snapX, snapY] = _ref25;\n  const position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nconst getNodePositionWithOrigin = function (node) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  const offsetX = (node.width ?? 0) * nodeOrigin[0];\n  const offsetY = (node.height ?? 0) * nodeOrigin[1];\n  const position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return {\n    ...position,\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  };\n};\nconst getRectOfNodes = function (nodes) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const box = nodes.reduce((currBox, node) => {\n    const {\n      x,\n      y\n    } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x,\n      y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nconst getNodesInside = function (nodeInternals, rect) {\n  let [tx, ty, tScale] = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1];\n  let partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  const paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  const visibleNodes = [];\n  nodeInternals.forEach(node => {\n    const {\n      width,\n      height,\n      selectable = true,\n      hidden = false\n    } = node;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    const {\n      positionAbsolute\n    } = getNodePositionWithOrigin(node, nodeOrigin);\n    const nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    const partiallyVisible = partially && overlappingArea > 0;\n    const area = (width || 0) * (height || 0);\n    const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n  const nodeIds = nodes.map(node => node.id);\n  return edges.filter(edge => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = function (bounds, width, height, minZoom, maxZoom) {\n  let padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  const xZoom = width / (bounds.width * (1 + padding));\n  const yZoom = height / (bounds.height * (1 + padding));\n  const zoom = Math.min(xZoom, yZoom);\n  const clampedZoom = clamp(zoom, minZoom, maxZoom);\n  const boundsCenterX = bounds.x + bounds.width / 2;\n  const boundsCenterY = bounds.y + bounds.height / 2;\n  const x = width / 2 - boundsCenterX * clampedZoom;\n  const y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nconst getD3Transition = function (selection) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\nconst alwaysValid = () => true;\nconst selector$e = s => ({\n  connectionStartHandle: s.connectionStartHandle,\n  connectOnClick: s.connectOnClick,\n  noPanClassName: s.noPanClassName\n});\nconst Handle = forwardRef((_ref26, ref) => {\n  let {\n    type = 'source',\n    position = Position.Top,\n    isValidConnection = alwaysValid,\n    isConnectable = true,\n    id,\n    onConnect,\n    children,\n    className,\n    onMouseDown,\n    ...rest\n  } = _ref26;\n  const store = useStoreApi();\n  // @fixme: remove type assertion and handle nodeId === null\n  const nodeId = useNodeId();\n  const {\n    connectionStartHandle,\n    connectOnClick,\n    noPanClassName\n  } = useStore(selector$e, shallow);\n  const handleId = id || null;\n  const isTarget = type === 'target';\n  const onConnectExtended = params => {\n    const {\n      defaultEdgeOptions,\n      onConnect: onConnectAction,\n      hasDefaultEdges\n    } = store.getState();\n    const edgeParams = {\n      ...defaultEdgeOptions,\n      ...params\n    };\n    if (hasDefaultEdges) {\n      const {\n        edges\n      } = store.getState();\n      store.setState({\n        edges: addEdge(edgeParams, edges)\n      });\n    }\n    onConnectAction?.(edgeParams);\n    onConnect?.(edgeParams);\n  };\n  const onMouseDownHandler = event => {\n    if (event.button === 0) {\n      handleMouseDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectExtended,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection\n      });\n    }\n    onMouseDown?.(event);\n  };\n  const onClick = event => {\n    const {\n      onClickConnectStart,\n      onClickConnectEnd,\n      connectionMode\n    } = store.getState();\n    if (!connectionStartHandle) {\n      onClickConnectStart?.(event, {\n        nodeId,\n        handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionStartHandle: {\n          nodeId,\n          type,\n          handleId\n        }\n      });\n      return;\n    }\n    const doc = getHostForElement(event.target);\n    const {\n      connection,\n      isValid\n    } = checkElementBelowIsValid(event, connectionMode, connectionStartHandle.type === 'target', connectionStartHandle.nodeId, connectionStartHandle.handleId || null, isValidConnection, doc);\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd?.(event);\n    store.setState({\n      connectionStartHandle: null\n    });\n  };\n  return jsx(\"div\", {\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    className: cc(['react-flow__handle', `react-flow__handle-${position}`, 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connecting: connectionStartHandle?.nodeId === nodeId && connectionStartHandle?.handleId === handleId && connectionStartHandle?.type === type\n    }]),\n    onMouseDown: onMouseDownHandler,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref,\n    ...rest,\n    children: children\n  });\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nconst DefaultNode = _ref27 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top,\n    sourcePosition = Position.Bottom\n  } = _ref27;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data?.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nconst InputNode = _ref28 => {\n  let {\n    data,\n    isConnectable,\n    sourcePosition = Position.Bottom\n  } = _ref28;\n  return jsxs(Fragment, {\n    children: [data?.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nconst OutputNode = _ref29 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top\n  } = _ref29;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data?.label]\n  });\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\nconst selector$d = s => ({\n  selectedNodes: s.getNodes().filter(n => n.selected),\n  selectedEdges: s.edges.filter(e => e.selected)\n});\nconst selectId = obj => obj.id;\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(_ref30 => {\n  let {\n    onSelectionChange\n  } = _ref30;\n  const store = useStoreApi();\n  const {\n    selectedNodes,\n    selectedEdges\n  } = useStore(selector$d, areEqual);\n  useEffect(() => {\n    const params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange?.(params);\n    store.getState().onSelectionChange?.(params);\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = s => !!s.onSelectionChange;\nfunction Wrapper$1(_ref31) {\n  let {\n    onSelectionChange\n  } = _ref31;\n  const storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return jsx(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nconst selector$c = s => ({\n  setNodes: s.setNodes,\n  setEdges: s.setEdges,\n  setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n  setMinZoom: s.setMinZoom,\n  setMaxZoom: s.setMaxZoom,\n  setTranslateExtent: s.setTranslateExtent,\n  setNodeExtent: s.setNodeExtent,\n  reset: s.reset\n});\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setState({\n        [key]: value\n      });\n    }\n  }, [value]);\n}\nconst StoreUpdater = _ref32 => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    edgesFocusable,\n    elevateNodesOnSelect,\n    minZoom,\n    maxZoom,\n    nodeExtent,\n    onNodesChange,\n    onEdgesChange,\n    elementsSelectable,\n    connectionMode,\n    snapGrid,\n    snapToGrid,\n    translateExtent,\n    connectOnClick,\n    defaultEdgeOptions,\n    fitView,\n    fitViewOptions,\n    onNodesDelete,\n    onEdgesDelete,\n    onNodeDrag,\n    onNodeDragStart,\n    onNodeDragStop,\n    onSelectionDrag,\n    onSelectionDragStart,\n    onSelectionDragStop,\n    noPanClassName,\n    nodeOrigin,\n    rfId\n  } = _ref32;\n  const {\n    setNodes,\n    setEdges,\n    setDefaultNodesAndEdges,\n    setMinZoom,\n    setMaxZoom,\n    setTranslateExtent,\n    setNodeExtent,\n    reset\n  } = useStore(selector$c, shallow);\n  const store = useStoreApi();\n  useEffect(() => {\n    const edgesWithDefaults = defaultEdges?.map(e => ({\n      ...e,\n      ...defaultEdgeOptions\n    }));\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return () => {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nconst style = {\n  display: 'none'\n};\nconst ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$b = s => s.ariaLiveMessage;\nfunction AriaLiveMessage(_ref33) {\n  let {\n    rfId\n  } = _ref33;\n  const ariaLiveMessage = useStore(selector$b);\n  return jsx(\"div\", {\n    id: `${ARIA_LIVE_MESSAGE}-${rfId}`,\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle,\n    children: ariaLiveMessage\n  });\n}\nfunction A11yDescriptions(_ref34) {\n  let {\n    rfId,\n    disableKeyboardA11y\n  } = _ref34;\n  return jsxs(Fragment, {\n    children: [jsxs(\"div\", {\n      id: `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' ']\n    }), jsx(\"div\", {\n      id: `${ARIA_EDGE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"\n    }), !disableKeyboardA11y && jsx(AriaLiveMessage, {\n      rfId: rfId\n    })]\n  });\n}\nconst shiftX = (x, shift, position) => {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nconst shiftY = (y, shift, position) => {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = _ref35 => {\n  let {\n    position,\n    centerX,\n    centerY,\n    radius = 10,\n    onMouseDown,\n    onMouseEnter,\n    onMouseOut,\n    type\n  } = _ref35;\n  return jsx(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nvar wrapEdge = EdgeComponent => {\n  const EdgeWrapper = _ref36 => {\n    let {\n      id,\n      className,\n      type,\n      data,\n      onClick,\n      onEdgeDoubleClick,\n      selected,\n      animated,\n      label,\n      labelStyle,\n      labelShowBg,\n      labelBgStyle,\n      labelBgPadding,\n      labelBgBorderRadius,\n      style,\n      source,\n      target,\n      sourceX,\n      sourceY,\n      targetX,\n      targetY,\n      sourcePosition,\n      targetPosition,\n      elementsSelectable,\n      hidden,\n      sourceHandleId,\n      targetHandleId,\n      onContextMenu,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      edgeUpdaterRadius,\n      onEdgeUpdate,\n      onEdgeUpdateStart,\n      onEdgeUpdateEnd,\n      markerEnd,\n      markerStart,\n      rfId,\n      ariaLabel,\n      isFocusable,\n      pathOptions,\n      interactionWidth\n    } = _ref36;\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [updating, setUpdating] = useState(false);\n    const store = useStoreApi();\n    const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n    const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    const onEdgeClick = event => {\n      const {\n        edges,\n        addSelectedEdges\n      } = store.getState();\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        const edge = edges.find(e => e.id === id);\n        onClick(event, edge);\n      }\n    };\n    const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    const handleEdgeUpdater = (event, isSourceHandle) => {\n      const nodeId = isSourceHandle ? target : source;\n      const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      const handleType = isSourceHandle ? 'target' : 'source';\n      const isValidConnection = () => true;\n      const isTarget = isSourceHandle;\n      const edge = store.getState().edges.find(e => e.id === id);\n      setUpdating(true);\n      onEdgeUpdateStart?.(event, edge, handleType);\n      const _onEdgeUpdateEnd = evt => {\n        setUpdating(false);\n        onEdgeUpdateEnd?.(evt, edge, handleType);\n      };\n      const onConnectEdge = connection => onEdgeUpdate?.(edge, connection);\n      handleMouseDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectEdge,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection,\n        elementEdgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    const onEdgeUpdaterSourceMouseDown = event => handleEdgeUpdater(event, true);\n    const onEdgeUpdaterTargetMouseDown = event => handleEdgeUpdater(event, false);\n    const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n    const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n    const inactive = !elementsSelectable && !onClick;\n    const handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\n    const onKeyDown = event => {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        const {\n          unselectNodesAndEdges,\n          addSelectedEdges,\n          edges\n        } = store.getState();\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          edgeRef.current?.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(e => e.id === id)]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', `react-flow__edge-${type}`, className, {\n        selected,\n        animated,\n        inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"data-testid\": `rf__edge-${id}`,\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`,\n      \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), handleEdgeUpdate && jsxs(Fragment, {\n        children: [jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  const standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(edgeTypes).filter(k => !['default', 'bezier'].includes(k)).reduce((res, key) => {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nfunction getHandlePosition(position, nodeRect) {\n  let handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const x = (handle?.x || 0) + nodeRect.x;\n  const y = (handle?.y || 0) + nodeRect.y;\n  const width = handle?.width || nodeRect.width;\n  const height = handle?.height || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  // there is no handleId when there are no multiple handles/ handles with ids\n  // so we just pick the first one\n  let handle = null;\n  if (bounds.length === 1 || !handleId) {\n    handle = bounds[0];\n  } else if (handleId) {\n    handle = bounds.find(d => d.id === handleId);\n  }\n  return typeof handle === 'undefined' ? null : handle;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n  const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref37) {\n  let {\n    sourcePos,\n    targetPos,\n    sourceWidth,\n    sourceHeight,\n    targetWidth,\n    targetHeight,\n    width,\n    height,\n    transform\n  } = _ref37;\n  const edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  const viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  const overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n  const isInvalid = !node || !handleBounds || !node.width || !node.height || typeof node.positionAbsolute?.x === 'undefined' || typeof node.positionAbsolute?.y === 'undefined';\n  return [{\n    x: node?.positionAbsolute?.x || 0,\n    y: node?.positionAbsolute?.y || 0,\n    width: node?.width || 0,\n    height: node?.height || 0\n  }, handleBounds, !isInvalid];\n}\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  let current = target;\n  do {\n    if (current?.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(n => (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals))).map(n => ({\n    id: n.id,\n    position: n.position || {\n      x: 0,\n      y: 0\n    },\n    positionAbsolute: n.positionAbsolute || {\n      x: 0,\n      y: 0\n    },\n    distance: {\n      x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n      y: mousePos.y - (n.positionAbsolute?.y ?? 0)\n    },\n    delta: {\n      x: 0,\n      y: 0\n    },\n    extent: n.extent,\n    parentNode: n.parentNode,\n    width: n.width,\n    height: n.height\n  }));\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  let nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  let currentExtent = node.extent || nodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      const parent = nodeInternals.get(node.parentNode);\n      const {\n        x: parentX,\n        y: parentY\n      } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      devWarn('Only child nodes can use a parent extent. Help: https://reactflow.dev/error#500');\n      currentExtent = nodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    const parent = nodeInternals.get(node.parentNode);\n    const {\n      x: parentX,\n      y: parentY\n    } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n    currentExtent = [[node.extent[0][0] + parentX, node.extent[0][1] + parentY], [node.extent[1][0] + parentX, node.extent[1][1] + parentY]];\n  }\n  let parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    const parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  const positionAbsolute = currentExtent ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref38) {\n  let {\n    nodeId,\n    dragItems,\n    nodeInternals\n  } = _ref38;\n  const extentedDragItems = dragItems.map(n => {\n    const node = nodeInternals.get(n.id);\n    return {\n      ...node,\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    };\n  });\n  return [nodeId ? extentedDragItems.find(n => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n  const handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  const handlesArray = Array.from(handles);\n  const nodeBounds = nodeElement.getBoundingClientRect();\n  const nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(handle => {\n    const handleBounds = handle.getBoundingClientRect();\n    return {\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n      ...getDimensions(handle)\n    };\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const node = getState().nodeInternals.get(id);\n    handler(event, {\n      ...node\n    });\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref39) {\n  let {\n    id,\n    store,\n    unselect = false\n  } = _ref39;\n  const {\n    addSelectedNodes,\n    unselectNodesAndEdges,\n    multiSelectionActive,\n    nodeInternals\n  } = store.getState();\n  const node = nodeInternals.get(id);\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n  }\n}\nfunction useGetPointerPosition() {\n  const store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  const getPointerPosition = useCallback(_ref40 => {\n    let {\n      sourceEvent\n    } = _ref40;\n    const {\n      transform,\n      snapGrid,\n      snapToGrid\n    } = store.getState();\n    const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    const pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n      ...pointerPos\n    };\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag(_ref41) {\n  let {\n    nodeRef,\n    disabled = false,\n    noDragClassName,\n    handleSelector,\n    nodeId,\n    isSelectable,\n    selectNodesOnDrag\n  } = _ref41;\n  const [dragging, setDragging] = useState(false);\n  const store = useStoreApi();\n  const dragItems = useRef();\n  const lastPos = useRef({\n    x: null,\n    y: null\n  });\n  const getPointerPosition = useGetPointerPosition();\n  useEffect(() => {\n    if (nodeRef?.current) {\n      const selection = select(nodeRef.current);\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        const dragHandler = drag().on('start', event => {\n          const {\n            nodeInternals,\n            multiSelectionActive,\n            unselectNodesAndEdges,\n            onNodeDragStart,\n            onSelectionDragStart\n          } = store.getState();\n          const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            if (!nodeInternals.get(nodeId)?.selected) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store\n            });\n          }\n          const pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            const [currentNode, nodes] = getEventHandlerParams({\n              nodeId,\n              dragItems: dragItems.current,\n              nodeInternals\n            });\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n        }).on('drag', event => {\n          const {\n            updateNodePositions,\n            nodeInternals,\n            nodeExtent,\n            onNodeDrag,\n            onSelectionDrag,\n            snapGrid,\n            snapToGrid,\n            nodeOrigin\n          } = store.getState();\n          const pointerPos = getPointerPosition(event);\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            lastPos.current = {\n              x: pointerPos.xSnapped,\n              y: pointerPos.ySnapped\n            };\n            let hasChange = false;\n            dragItems.current = dragItems.current.map(n => {\n              const nextPosition = {\n                x: pointerPos.x - n.distance.x,\n                y: pointerPos.y - n.distance.y\n              };\n              if (snapToGrid) {\n                nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n              }\n              const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin);\n              // we want to make sure that we only fire a change event when there is a changes\n              hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n              n.position = updatedPos.position;\n              n.positionAbsolute = updatedPos.positionAbsolute;\n              return n;\n            });\n            if (!hasChange) {\n              return;\n            }\n            const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n            updateNodePositions(dragItems.current, true, true);\n            setDragging(true);\n            if (onDrag) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onDrag(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).on('end', event => {\n          setDragging(false);\n          if (dragItems.current) {\n            const {\n              updateNodePositions,\n              nodeInternals,\n              onNodeDragStop,\n              onSelectionDragStop\n            } = store.getState();\n            const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(event => {\n          const target = event.target;\n          const isDraggable = !event.button && (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return () => {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  const store = useStoreApi();\n  const updatePositions = useCallback(params => {\n    const {\n      nodeInternals,\n      nodeExtent,\n      updateNodePositions,\n      getNodes,\n      snapToGrid,\n      snapGrid\n    } = store.getState();\n    const selectedNodes = getNodes().filter(n => n.selected);\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    const xVelo = snapToGrid ? snapGrid[0] : 5;\n    const yVelo = snapToGrid ? snapGrid[1] : 5;\n    const factor = params.isShiftPressed ? 4 : 1;\n    const positionDiffX = params.x * xVelo * factor;\n    const positionDiffY = params.y * yVelo * factor;\n    const nodeUpdates = selectedNodes.map(n => {\n      if (n.positionAbsolute) {\n        const nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent);\n        n.position = updatedPos.position;\n        n.positionAbsolute = updatedPos.positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nconst arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = NodeComponent => {\n  const NodeWrapper = _ref42 => {\n    let {\n      id,\n      type,\n      data,\n      xPos,\n      yPos,\n      xPosOrigin,\n      yPosOrigin,\n      selected,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      onContextMenu,\n      onDoubleClick,\n      style,\n      className,\n      isDraggable,\n      isSelectable,\n      isConnectable,\n      isFocusable,\n      selectNodesOnDrag,\n      sourcePosition,\n      targetPosition,\n      hidden,\n      resizeObserver,\n      dragHandle,\n      zIndex,\n      isParent,\n      noDragClassName,\n      noPanClassName,\n      initialized,\n      disableKeyboardA11y,\n      ariaLabel,\n      rfId\n    } = _ref42;\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const prevSourcePosition = useRef(sourcePosition);\n    const prevTargetPosition = useRef(targetPosition);\n    const prevType = useRef(type);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const updatePositions = useUpdateNodePositions();\n    const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    const onSelectNodeHandler = event => {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id,\n          store\n        });\n      }\n      if (onClick) {\n        const node = store.getState().nodeInternals.get(id);\n        onClick(event, {\n          ...node\n        });\n      }\n    };\n    const onKeyDown = event => {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          nodeRef.current?.blur();\n        }\n        handleNodeClick({\n          id,\n          store,\n          unselect\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: `Moved selected node ${event.key.replace('Arrow', '').toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(() => {\n      if (nodeRef.current && !hidden) {\n        const currNode = nodeRef.current;\n        resizeObserver?.observe(currNode);\n        return () => resizeObserver?.unobserve(currNode);\n      }\n    }, [hidden]);\n    useEffect(() => {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      const typeChanged = prevType.current !== type;\n      const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      const targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    const dragging = useDrag({\n      nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable,\n      selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', `react-flow__node-${type}`, {\n        // this is overwritable by passing `nopan` as a class name\n        [noPanClassName]: isDraggable\n      }, className, {\n        selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging\n      }]),\n      ref: nodeRef,\n      style: {\n        zIndex,\n        transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden',\n        ...style\n      },\n      \"data-id\": id,\n      \"data-testid\": `rf__node-${id}`,\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nfunction createNodeTypes(nodeTypes) {\n  const standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(nodeTypes).filter(k => !['input', 'default', 'output', 'group'].includes(k)).reduce((res, key) => {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nconst getPositionWithOrigin = _ref43 => {\n  let {\n    x,\n    y,\n    width,\n    height,\n    origin\n  } = _ref43;\n  if (!width || !height) {\n    return {\n      x,\n      y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    devWarn('nodeOrigin must be between 0 and 1');\n    return {\n      x,\n      y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function () {\n  let keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: doc\n  };\n  const [keyPressed, setKeyPressed] = useState(false);\n  // we need to remember the pressed keys in order to support combinations\n  const pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  const [keyCodes, keysToWatch] = useMemo(() => {\n    if (keyCode !== null) {\n      const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n      const keys = keyCodeArr.filter(kc => typeof kc === 'string').map(kc => kc.split('+'));\n      const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n      return [keys, keysFlat];\n    }\n    return [[], []];\n  }, [keyCode]);\n  useEffect(() => {\n    if (keyCode !== null) {\n      const downHandler = event => {\n        if (isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      const upHandler = event => {\n        if (isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n      };\n      const resetHandler = () => {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options?.target?.addEventListener('keydown', downHandler);\n      options?.target?.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return () => {\n        options?.target?.removeEventListener('keydown', downHandler);\n        options?.target?.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(keys => isUp || keys.length === pressedKeys.size)\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(keys => keys.every(k => pressedKeys.has(k)));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, parentNodes, result, nodeOrigin) {\n  if (!node.parentNode) {\n    return result;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, parentNodes, {\n    x: (result.x ?? 0) + parentNodePosition.x,\n    y: (result.y ?? 0) + parentNodePosition.y,\n    z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0\n  }, nodeOrigin);\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  const nextNodeInternals = new Map();\n  const parentNodes = {};\n  const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(node => {\n    const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    const currInternals = nodeInternals.get(node.id);\n    const internals = {\n      width: currInternals?.width,\n      height: currInternals?.height,\n      ...node,\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    };\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n        z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  nextNodeInternals.forEach(node => {\n    if (node.parentNode && !nextNodeInternals.has(node.parentNode)) {\n      throw new Error(`Parent node ${node.parentNode} not found`);\n    }\n    if (node.parentNode || parentNodes[node.id]) {\n      const {\n        x,\n        y,\n        z\n      } = calculateXYZPosition(node, nextNodeInternals, parentNodes, {\n        ...node.position,\n        z: node[internalsSymbol]?.z ?? 0\n      }, nodeOrigin);\n      node.positionAbsolute = {\n        x,\n        y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n  return nextNodeInternals;\n}\nfunction fitView(get) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    getNodes,\n    width,\n    height,\n    minZoom,\n    maxZoom,\n    d3Zoom,\n    d3Selection,\n    fitViewOnInitDone,\n    fitViewOnInit,\n    nodeOrigin\n  } = get();\n  if (options.initial && !fitViewOnInitDone && fitViewOnInit || !options.initial) {\n    if (d3Zoom && d3Selection) {\n      const nodes = getNodes().filter(n => options.includeHiddenNodes ? n.width && n.height : !n.hidden);\n      const nodesInitialized = nodes.every(n => n.width && n.height);\n      if (nodes.length > 0 && nodesInitialized) {\n        const bounds = getRectOfNodes(nodes, nodeOrigin);\n        const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n        const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n        if (typeof options.duration === 'number' && options.duration > 0) {\n          d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n        } else {\n          d3Zoom.transform(d3Selection, nextTransform);\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(change => {\n    const node = nodeInternals.get(change.id);\n    if (node) {\n      nodeInternals.set(node.id, {\n        ...node,\n        [internalsSymbol]: node[internalsSymbol],\n        selected: change.selected\n      });\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(e => {\n    const change = edgeChanges.find(change => change.id === e.id);\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref44) {\n  let {\n    changedNodes,\n    changedEdges,\n    get,\n    set\n  } = _ref44;\n  const {\n    nodeInternals,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    hasDefaultNodes,\n    hasDefaultEdges\n  } = get();\n  if (changedNodes?.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange?.(changedNodes);\n  }\n  if (changedEdges?.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange?.(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: () => 1,\n  setViewport: noop,\n  getViewport: () => ({\n    x: 0,\n    y: 0,\n    zoom: 1\n  }),\n  fitView: noop,\n  setCenter: noop,\n  fitBounds: noop,\n  project: position => position,\n  viewportInitialized: false\n};\nconst selector$a = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection\n});\nconst useViewportHelper = () => {\n  const store = useStoreApi();\n  const {\n    d3Zoom,\n    d3Selection\n  } = useStore(selector$a, shallow);\n  const viewportHelperFunctions = useMemo(() => {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n        zoomOut: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n        zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n        getZoom: () => store.getState().transform[2],\n        setViewport: (transform, options) => {\n          const [x, y, zoom] = store.getState().transform;\n          const nextTransform = zoomIdentity.translate(transform.x ?? x, transform.y ?? y).scale(transform.zoom ?? zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n        },\n        getViewport: () => {\n          const [x, y, zoom] = store.getState().transform;\n          return {\n            x,\n            y,\n            zoom\n          };\n        },\n        fitView: options => fitView(store.getState, options),\n        setCenter: (x, y, options) => {\n          const {\n            width,\n            height,\n            maxZoom\n          } = store.getState();\n          const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n          const centerX = width / 2 - x * nextZoom;\n          const centerY = height / 2 - y * nextZoom;\n          const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        fitBounds: (bounds, options) => {\n          const {\n            width,\n            height,\n            minZoom,\n            maxZoom\n          } = store.getState();\n          const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n          const transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        project: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid\n          } = store.getState();\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  const viewportHelper = useViewportHelper();\n  const store = useStoreApi();\n  const getNodes = useCallback(() => {\n    return store.getState().getNodes().map(n => ({\n      ...n\n    }));\n  }, []);\n  const getNode = useCallback(id => {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  const getEdges = useCallback(() => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.map(e => ({\n      ...e\n    }));\n  }, []);\n  const getEdge = useCallback(id => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.find(e => e.id === id);\n  }, []);\n  const setNodes = useCallback(payload => {\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    const nodes = getNodes();\n    const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nextNodes.length === 0 ? nodes.map(node => ({\n        type: 'remove',\n        id: node.id\n      })) : nextNodes.map(node => ({\n        item: node,\n        type: 'reset'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const setEdges = useCallback(payload => {\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.length === 0 ? edges.map(edge => ({\n        type: 'remove',\n        id: edge.id\n      })) : nextEdges.map(edge => ({\n        item: edge,\n        type: 'reset'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const addNodes = useCallback(payload => {\n    const nodes = Array.isArray(payload) ? payload : [payload];\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    if (hasDefaultNodes) {\n      const currentNodes = getNodes();\n      const nextNodes = [...currentNodes, ...nodes];\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nodes.map(node => ({\n        item: node,\n        type: 'add'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const addEdges = useCallback(payload => {\n    const nextEdges = Array.isArray(payload) ? payload : [payload];\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    if (hasDefaultEdges) {\n      setEdges([...edges, ...nextEdges]);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.map(edge => ({\n        item: edge,\n        type: 'add'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const toObject = useCallback(() => {\n    const {\n      getNodes,\n      edges = [],\n      transform\n    } = store.getState();\n    const [x, y, zoom] = transform;\n    return {\n      nodes: getNodes().map(n => ({\n        ...n\n      })),\n      edges: edges.map(e => ({\n        ...e\n      })),\n      viewport: {\n        x,\n        y,\n        zoom\n      }\n    };\n  }, []);\n  const deleteElements = useCallback(_ref45 => {\n    let {\n      nodes: nodesDeleted,\n      edges: edgesDeleted\n    } = _ref45;\n    const {\n      nodeInternals,\n      getNodes,\n      edges,\n      hasDefaultNodes,\n      hasDefaultEdges,\n      onNodesDelete,\n      onEdgesDelete,\n      onNodesChange,\n      onEdgesChange\n    } = store.getState();\n    const nodeIds = (nodesDeleted || []).map(node => node.id);\n    const edgeIds = (edgesDeleted || []).map(edge => edge.id);\n    const nodesToRemove = getNodes().reduce((res, node) => {\n      const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(n => n.id === node.parentNode);\n      const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    const deletableEdges = edges.filter(e => typeof e.deletable === 'boolean' ? e.deletable : true);\n    const initialHitEdges = deletableEdges.filter(e => edgeIds.includes(e.id));\n    if (nodesToRemove || initialHitEdges) {\n      const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n      const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(e => !edgeIdsToRemove.includes(e.id))\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(node => {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete?.(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(id => ({\n            id,\n            type: 'remove'\n          })));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete?.(nodesToRemove);\n        if (onNodesChange) {\n          const nodeChanges = nodesToRemove.map(n => ({\n            id: n.id,\n            type: 'remove'\n          }));\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  const getNodeRect = useCallback(nodeOrRect => {\n    const isRect = isRectObject(nodeOrRect);\n    const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  const getIntersectingNodes = useCallback(function (nodeOrRect) {\n    let partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let nodes = arguments.length > 2 ? arguments[2] : undefined;\n    const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(n => {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      const currNodeRect = nodeToRect(n);\n      const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      const partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    });\n  }, []);\n  const isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    let partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const [nodeRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return false;\n    }\n    const overlappingArea = getOverlappingArea(nodeRect, area);\n    const partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n  }, []);\n  return useMemo(() => {\n    return {\n      ...viewportHelper,\n      getNodes,\n      getNode,\n      getEdges,\n      getEdge,\n      setNodes,\n      setEdges,\n      addNodes,\n      addEdges,\n      toObject,\n      deleteElements,\n      getIntersectingNodes,\n      isNodeIntersecting\n    };\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nvar useGlobalKeyHandler = _ref46 => {\n  let {\n    deleteKeyCode,\n    multiSelectionKeyCode\n  } = _ref46;\n  const store = useStoreApi();\n  const {\n    deleteElements\n  } = useReactFlow();\n  const deleteKeyPressed = useKeyPress(deleteKeyCode);\n  const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(() => {\n    if (deleteKeyPressed) {\n      const {\n        edges,\n        getNodes\n      } = store.getState();\n      const selectedNodes = getNodes().filter(node => node.selected);\n      const selectedEdges = edges.filter(edge => edge.selected);\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(() => {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  const store = useStoreApi();\n  useEffect(() => {\n    let resizeObserver;\n    const updateDimensions = () => {\n      if (!rendererNode.current) {\n        return;\n      }\n      const size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        devWarn('The React Flow parent container needs a width and a height to render the graph. Help: https://reactflow.dev/error#400');\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(() => updateDimensions());\n      resizeObserver.observe(rendererNode.current);\n    }\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nconst containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = eventViewport => ({\n  x: eventViewport.x,\n  y: eventViewport.y,\n  zoom: eventViewport.k\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst selector$9 = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection,\n  d3ZoomHandler: s.d3ZoomHandler,\n  userSelectionActive: s.userSelectionActive\n});\nconst ZoomPane = _ref47 => {\n  let {\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onPaneContextMenu,\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    elementsSelectable,\n    panOnDrag = true,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    zoomActivationKeyCode,\n    preventScrolling = true,\n    children,\n    noWheelClassName,\n    noPanClassName\n  } = _ref47;\n  const timerId = useRef();\n  const store = useStoreApi();\n  const isZoomingOrPanning = useRef(false);\n  const zoomedWithRightMouseButton = useRef(false);\n  const zoomPane = useRef(null);\n  const prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  const {\n    d3Zoom,\n    d3Selection,\n    d3ZoomHandler,\n    userSelectionActive\n  } = useStore(selector$9, shallow);\n  const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  useResizeHandler(zoomPane);\n  useEffect(() => {\n    if (zoomPane.current) {\n      const bbox = zoomPane.current.getBoundingClientRect();\n      const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      const selection = select(zoomPane.current).call(d3ZoomInstance);\n      const updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      const extent = [[0, 0], [bbox.width, bbox.height]];\n      const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', event => {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          const currentZoom = d3Selection.property('__zoom').k || 1;\n          if (event.ctrlKey && zoomOnPinch) {\n            const point = pointer(event);\n            // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n            const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            d3Zoom.scaleTo(d3Selection, zoom, point);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName]);\n  useEffect(() => {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', event => {\n          const {\n            onViewportChange\n          } = store.getState();\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, event.sourceEvent?.button));\n          if (onMove || onViewportChange) {\n            const flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange?.(flowTransform);\n            onMove?.(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('start', event => {\n        if (!event.sourceEvent) {\n          return null;\n        }\n        const {\n          onViewportChangeStart\n        } = store.getState();\n        isZoomingOrPanning.current = true;\n        if (event.sourceEvent?.type === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        if (onMoveStart || onViewportChangeStart) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          onViewportChangeStart?.(flowTransform);\n          onMoveStart?.(event.sourceEvent, flowTransform);\n        }\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('end', event => {\n        if (!event.sourceEvent) {\n          return null;\n        }\n        const {\n          onViewportChangeEnd\n        } = store.getState();\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, event.sourceEvent?.button) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(() => {\n            onViewportChangeEnd?.(flowTransform);\n            onMoveEnd?.(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.filter(event => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nconst selector$8 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  userSelectionRect: s.userSelectionRect\n});\nfunction UserSelection() {\n  const {\n    userSelectionActive,\n    userSelectionRect\n  } = useStore(selector$8, shallow);\n  const showSelectionBox = userSelectionActive && userSelectionRect;\n  if (!showSelectionBox) {\n    return null;\n  }\n  return jsx(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  const parent = res.find(e => e.id === updateItem.parentNode);\n  if (parent) {\n    const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      parent.style = {\n        ...parent.style\n      } || {};\n      parent.style.width = parent.style.width ?? parent.width;\n      parent.style.height = parent.style.height ?? parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        const xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        const yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(c => c.type === 'reset')) {\n    return changes.filter(c => c.type === 'reset').map(c => c.item);\n  }\n  const initElements = changes.filter(c => c.type === 'add').map(c => c.item);\n  return elements.reduce((res, item) => {\n    const currentChanges = changes.filter(c => c.id === item.id);\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    const updateItem = {\n      ...item\n    };\n    for (const currentChange of currentChanges) {\n      if (currentChange) {\n        switch (currentChange.type) {\n          case 'select':\n            {\n              updateItem.selected = currentChange.selected;\n              break;\n            }\n          case 'position':\n            {\n              if (typeof currentChange.position !== 'undefined') {\n                updateItem.position = currentChange.position;\n              }\n              if (typeof currentChange.positionAbsolute !== 'undefined') {\n                updateItem.positionAbsolute = currentChange.positionAbsolute;\n              }\n              if (typeof currentChange.dragging !== 'undefined') {\n                updateItem.dragging = currentChange.dragging;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'dimensions':\n            {\n              if (typeof currentChange.dimensions !== 'undefined') {\n                updateItem.width = currentChange.dimensions.width;\n                updateItem.height = currentChange.dimensions.height;\n              }\n              if (typeof currentChange.updateStyle !== 'undefined') {\n                updateItem.style = {\n                  ...(updateItem.style || {}),\n                  ...currentChange.dimensions\n                };\n              }\n              if (typeof currentChange.resizing === 'boolean') {\n                updateItem.resizing = currentChange.resizing;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'remove':\n            {\n              return res;\n            }\n        }\n      }\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n  id,\n  type: 'select',\n  selected\n});\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce((res, item) => {\n    const willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nfunction getMousePosition(event, containerBounds) {\n  return {\n    x: event.clientX - containerBounds.left,\n    y: event.clientY - containerBounds.top\n  };\n}\nconst wrapHandler = (handler, containerRef) => {\n  return event => {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler?.(event);\n  };\n};\nconst selector$7 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  elementsSelectable: s.elementsSelectable,\n  dragging: s.paneDragging\n});\nconst Pane = memo(_ref48 => {\n  let {\n    isSelecting,\n    selectionMode = SelectionMode.Full,\n    panOnDrag,\n    onSelectionStart,\n    onSelectionEnd,\n    onPaneClick,\n    onPaneContextMenu,\n    onPaneScroll,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    children\n  } = _ref48;\n  const container = useRef(null);\n  const store = useStoreApi();\n  const prevSelectedNodesCount = useRef(0);\n  const prevSelectedEdgesCount = useRef(0);\n  const containerBounds = useRef();\n  const {\n    userSelectionActive,\n    elementsSelectable,\n    dragging\n  } = useStore(selector$7, shallow);\n  const resetUserSelection = () => {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  const onClick = event => {\n    onPaneClick?.(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  const onContextMenu = event => {\n    if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu?.(event);\n  };\n  const onWheel = onPaneScroll ? event => onPaneScroll(event) : undefined;\n  const onMouseDown = event => {\n    const {\n      resetSelectedElements,\n      domNode\n    } = store.getState();\n    containerBounds.current = domNode?.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = getMousePosition(event, containerBounds.current);\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x,\n        y\n      }\n    });\n    onSelectionStart?.(event);\n  };\n  const onMouseMove = event => {\n    const {\n      userSelectionRect,\n      nodeInternals,\n      edges,\n      transform,\n      onNodesChange,\n      onEdgesChange,\n      nodeOrigin,\n      getNodes\n    } = store.getState();\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    const mousePos = getMousePosition(event, containerBounds.current);\n    const startX = userSelectionRect.startX ?? 0;\n    const startY = userSelectionRect.startY ?? 0;\n    const nextUserSelectRect = {\n      ...userSelectionRect,\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    };\n    const nodes = getNodes();\n    const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(e => e.id);\n    const selectedNodeIds = selectedNodes.map(n => n.id);\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      const changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange?.(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      const changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (changes.length) {\n        onEdgesChange?.(changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  const onMouseUp = event => {\n    const {\n      userSelectionRect\n    } = store.getState();\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick?.(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd?.(event);\n  };\n  const onMouseLeave = event => {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd?.(event);\n    }\n    resetUserSelection();\n  };\n  const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return jsxs(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle,\n    children: [children, jsx(UserSelection, {})]\n  });\n});\nPane.displayName = 'Pane';\nconst selector$6 = s => ({\n  transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n  userSelectionActive: s.userSelectionActive\n});\nconst bboxSelector = s => {\n  const selectedNodes = s.getNodes().filter(n => n.selected);\n  return getRectOfNodes(selectedNodes, s.nodeOrigin);\n};\nfunction NodesSelection(_ref49) {\n  let {\n    onSelectionContextMenu,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref49;\n  const store = useStoreApi();\n  const {\n    transformString,\n    userSelectionActive\n  } = useStore(selector$6, shallow);\n  const {\n    width,\n    height,\n    x: left,\n    y: top\n  } = useStore(bboxSelector, shallow);\n  const updatePositions = useUpdateNodePositions();\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    if (!disableKeyboardA11y) {\n      nodeRef.current?.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  const onContextMenu = onSelectionContextMenu ? event => {\n    const selectedNodes = store.getState().getNodes().filter(n => n.selected);\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  const onKeyDown = event => {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width,\n        height,\n        top,\n        left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nconst selector$5 = s => s.nodesSelectionActive;\nconst FlowRenderer = _ref50 => {\n  let {\n    children,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneContextMenu,\n    onPaneScroll,\n    deleteKeyCode,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    onSelectionStart,\n    onSelectionEnd,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    elementsSelectable,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag: _panOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    onSelectionContextMenu,\n    noWheelClassName,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref50;\n  const nodesSelectionActive = useStore(selector$5);\n  const selectionKeyPressed = useKeyPress(selectionKeyCode);\n  const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  const panOnDrag = panActivationKeyPressed || _panOnDrag;\n  const isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode,\n    multiSelectionKeyCode\n  });\n  return jsx(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: jsxs(Pane, {\n      onSelectionStart: onSelectionStart,\n      onSelectionEnd: onSelectionEnd,\n      onPaneClick: onPaneClick,\n      onPaneMouseEnter: onPaneMouseEnter,\n      onPaneMouseMove: onPaneMouseMove,\n      onPaneMouseLeave: onPaneMouseLeave,\n      onPaneContextMenu: onPaneContextMenu,\n      onPaneScroll: onPaneScroll,\n      panOnDrag: panOnDrag,\n      isSelecting: !!isSelecting,\n      selectionMode: selectionMode,\n      children: [children, nodesSelectionActive && jsx(NodesSelection$1, {\n        onSelectionContextMenu: onSelectionContextMenu,\n        noPanClassName: noPanClassName,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  const nodes = useStore(useCallback(s => onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n    x: 0,\n    y: 0,\n    width: s.width,\n    height: s.height\n  }, s.transform, true) : s.getNodes(), [onlyRenderVisible]));\n  return nodes;\n}\nconst selector$4 = s => ({\n  nodesDraggable: s.nodesDraggable,\n  nodesConnectable: s.nodesConnectable,\n  nodesFocusable: s.nodesFocusable,\n  elementsSelectable: s.elementsSelectable,\n  updateNodeDimensions: s.updateNodeDimensions\n});\nconst NodeRenderer = props => {\n  const {\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    elementsSelectable,\n    updateNodeDimensions\n  } = useStore(selector$4, shallow);\n  const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  const resizeObserverRef = useRef();\n  const resizeObserver = useMemo(() => {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    const observer = new ResizeObserver(entries => {\n      const updates = entries.map(entry => ({\n        id: entry.target.getAttribute('data-id'),\n        nodeElement: entry.target,\n        forceUpdate: true\n      }));\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(() => {\n    return () => {\n      resizeObserverRef?.current?.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(node => {\n      let nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        devWarn(`Node type \"${nodeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\n        nodeType = 'default';\n      }\n      const NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      const isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      const isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      const isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      const isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n      const clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      const posX = clampedPosition?.x ?? 0;\n      const posY = clampedPosition?.y ?? 0;\n      const posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: node.width ?? 0,\n        height: node.height ?? 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        isFocusable: isFocusable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: node[internalsSymbol]?.z ?? 0,\n        isParent: !!node[internalsSymbol]?.isParent,\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nconst defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  let elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let maxLevel = -1;\n  const levelLookup = edges.reduce((tree, edge) => {\n    const hasZIndex = isNumeric(edge.zIndex);\n    let z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      z = hasZIndex ? edge.zIndex : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  const edgeTree = Object.entries(levelLookup).map(_ref51 => {\n    let [key, edges] = _ref51;\n    const level = +key;\n    return {\n      edges,\n      level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  const edges = useStore(useCallback(s => {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(e => {\n      const sourceNode = nodeInternals.get(e.source);\n      const targetNode = nodeInternals.get(e.target);\n      return sourceNode?.width && sourceNode?.height && targetNode?.width && targetNode?.height && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nconst oppositePosition = {\n  [Position.Left]: Position.Right,\n  [Position.Right]: Position.Left,\n  [Position.Top]: Position.Bottom,\n  [Position.Bottom]: Position.Top\n};\nconst ConnectionLine = _ref52 => {\n  let {\n    connectionNodeId,\n    connectionHandleType,\n    connectionLineStyle,\n    connectionLineType = ConnectionLineType.Bezier,\n    isConnectable,\n    CustomConnectionLineComponent\n  } = _ref52;\n  const {\n    fromNode,\n    handleId,\n    toX,\n    toY,\n    connectionMode\n  } = useStore(useCallback(s => ({\n    fromNode: s.nodeInternals.get(connectionNodeId),\n    handleId: s.connectionHandleId,\n    toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n    toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n    connectionMode: s.connectionMode\n  }), [connectionNodeId]), shallow);\n  const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n  let handleBounds = fromHandleBounds?.[connectionHandleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[connectionHandleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !isConnectable || !handleBounds) {\n    return null;\n  }\n  const fromHandle = handleId ? handleBounds.find(d => d.id === handleId) : handleBounds[0];\n  const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode?.width ?? 0) / 2;\n  const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode?.height ?? 0;\n  const fromX = (fromNode?.positionAbsolute?.x || 0) + fromHandleX;\n  const fromY = (fromNode?.positionAbsolute?.y || 0) + fromHandleY;\n  const fromPosition = fromHandle?.position;\n  if (!fromPosition) {\n    return null;\n  }\n  const toPosition = oppositePosition[fromPosition];\n  if (CustomConnectionLineComponent) {\n    return jsx(\"g\", {\n      className: \"react-flow__connection\",\n      children: jsx(CustomConnectionLineComponent, {\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        fromNode: fromNode,\n        fromHandle: fromHandle,\n        fromX: fromX,\n        fromY: fromY,\n        toX: toX,\n        toY: toY,\n        fromPosition: fromPosition,\n        toPosition: toPosition\n      })\n    });\n  }\n  let dAttr = '';\n  const pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (connectionLineType === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    [dAttr] = getBezierPath(pathParams);\n  } else if (connectionLineType === ConnectionLineType.Step) {\n    [dAttr] = getSmoothStepPath({\n      ...pathParams,\n      borderRadius: 0\n    });\n  } else if (connectionLineType === ConnectionLineType.SmoothStep) {\n    [dAttr] = getSmoothStepPath(pathParams);\n  } else if (connectionLineType === ConnectionLineType.SimpleBezier) {\n    [dAttr] = getSimpleBezierPath(pathParams);\n  } else {\n    dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n  }\n  return jsx(\"g\", {\n    className: \"react-flow__connection\",\n    children: jsx(\"path\", {\n      d: dAttr,\n      fill: \"none\",\n      className: \"react-flow__connection-path\",\n      style: connectionLineStyle\n    })\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst ArrowSymbol = _ref53 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref53;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nconst ArrowClosedSymbol = _ref54 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref54;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nconst MarkerSymbols = {\n  [MarkerType.Arrow]: ArrowSymbol,\n  [MarkerType.ArrowClosed]: ArrowClosedSymbol\n};\nfunction useMarkerSymbol(type) {\n  const symbol = useMemo(() => {\n    const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      devWarn(`Marker type \"${type}\" doesn't exist. Help: https://reactflow.dev/error#900`);\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nconst Marker = _ref55 => {\n  let {\n    id,\n    type,\n    color,\n    width = 12.5,\n    height = 12.5,\n    markerUnits = 'strokeWidth',\n    strokeWidth,\n    orient = 'auto-start-reverse'\n  } = _ref55;\n  const Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: `${width}`,\n    markerHeight: `${height}`,\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nconst markerSelector = _ref56 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref56;\n  return s => {\n    const ids = [];\n    return s.edges.reduce((markers, edge) => {\n      [edge.markerStart, edge.markerEnd].forEach(marker => {\n        if (marker && typeof marker === 'object') {\n          const markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push({\n              id: markerId,\n              color: marker.color || defaultColor,\n              ...marker\n            });\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort((a, b) => a.id.localeCompare(b.id));\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = _ref57 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref57;\n  const markers = useStore(useCallback(markerSelector({\n    defaultColor,\n    rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n  return jsx(\"defs\", {\n    children: markers.map(marker => jsx(Marker, {\n      id: marker.id,\n      type: marker.type,\n      color: marker.color,\n      width: marker.width,\n      height: marker.height,\n      markerUnits: marker.markerUnits,\n      strokeWidth: marker.strokeWidth,\n      orient: marker.orient\n    }, marker.id))\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nconst selector$3 = s => ({\n  connectionNodeId: s.connectionNodeId,\n  connectionHandleType: s.connectionHandleType,\n  nodesConnectable: s.nodesConnectable,\n  edgesFocusable: s.edgesFocusable,\n  elementsSelectable: s.elementsSelectable,\n  width: s.width,\n  height: s.height,\n  connectionMode: s.connectionMode,\n  nodeInternals: s.nodeInternals\n});\nconst EdgeRenderer = props => {\n  const {\n    connectionNodeId,\n    connectionHandleType,\n    nodesConnectable,\n    edgesFocusable,\n    elementsSelectable,\n    width,\n    height,\n    connectionMode,\n    nodeInternals\n  } = useStore(selector$3, shallow);\n  const edgeTree = useVisibleEdges(props.onlyRenderVisibleElements, nodeInternals, props.elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  const {\n    connectionLineType,\n    defaultMarkerColor,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle\n  } = props;\n  const renderConnectionLine = connectionNodeId && connectionHandleType;\n  return jsxs(Fragment, {\n    children: [edgeTree.map(_ref58 => {\n      let {\n        level,\n        edges,\n        isMaxLevel\n      } = _ref58;\n      return jsxs(\"svg\", {\n        style: {\n          zIndex: level\n        },\n        width: width,\n        height: height,\n        className: \"react-flow__edges react-flow__container\",\n        children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n          defaultColor: defaultMarkerColor,\n          rfId: props.rfId\n        }), jsx(\"g\", {\n          children: edges.map(edge => {\n            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n            if (!sourceIsValid || !targetIsValid) {\n              return null;\n            }\n            let edgeType = edge.type || 'default';\n            if (!props.edgeTypes[edgeType]) {\n              devWarn(`Edge type \"${edgeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\n              edgeType = 'default';\n            }\n            const EdgeComponent = props.edgeTypes[edgeType] || props.edgeTypes.default;\n            // when connection type is loose we can define all handles as sources\n            const targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : targetHandleBounds.target || targetHandleBounds.source;\n            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle || null);\n            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle || null);\n            const sourcePosition = sourceHandle?.position || Position.Bottom;\n            const targetPosition = targetHandle?.position || Position.Top;\n            const isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n            if (!sourceHandle || !targetHandle) {\n              devWarn(`Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: ${!sourceHandle ? edge.sourceHandle : edge.targetHandle}; edge id: ${edge.id}. Help: https://reactflow.dev/error#800`);\n              return null;\n            }\n            const {\n              sourceX,\n              sourceY,\n              targetX,\n              targetY\n            } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n            return jsx(EdgeComponent, {\n              id: edge.id,\n              className: cc([edge.className, props.noPanClassName]),\n              type: edgeType,\n              data: edge.data,\n              selected: !!edge.selected,\n              animated: !!edge.animated,\n              hidden: !!edge.hidden,\n              label: edge.label,\n              labelStyle: edge.labelStyle,\n              labelShowBg: edge.labelShowBg,\n              labelBgStyle: edge.labelBgStyle,\n              labelBgPadding: edge.labelBgPadding,\n              labelBgBorderRadius: edge.labelBgBorderRadius,\n              style: edge.style,\n              source: edge.source,\n              target: edge.target,\n              sourceHandleId: edge.sourceHandle,\n              targetHandleId: edge.targetHandle,\n              markerEnd: edge.markerEnd,\n              markerStart: edge.markerStart,\n              sourceX: sourceX,\n              sourceY: sourceY,\n              targetX: targetX,\n              targetY: targetY,\n              sourcePosition: sourcePosition,\n              targetPosition: targetPosition,\n              elementsSelectable: elementsSelectable,\n              onEdgeUpdate: props.onEdgeUpdate,\n              onContextMenu: props.onEdgeContextMenu,\n              onMouseEnter: props.onEdgeMouseEnter,\n              onMouseMove: props.onEdgeMouseMove,\n              onMouseLeave: props.onEdgeMouseLeave,\n              onClick: props.onEdgeClick,\n              edgeUpdaterRadius: props.edgeUpdaterRadius,\n              onEdgeDoubleClick: props.onEdgeDoubleClick,\n              onEdgeUpdateStart: props.onEdgeUpdateStart,\n              onEdgeUpdateEnd: props.onEdgeUpdateEnd,\n              rfId: props.rfId,\n              ariaLabel: edge.ariaLabel,\n              isFocusable: isFocusable,\n              pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n              interactionWidth: edge.interactionWidth\n            }, edge.id);\n          })\n        })]\n      }, level);\n    }), renderConnectionLine && jsx(\"svg\", {\n      style: connectionLineContainerStyle,\n      width: width,\n      height: height,\n      className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n      children: jsx(ConnectionLine, {\n        connectionNodeId: connectionNodeId,\n        connectionHandleType: connectionHandleType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineType: connectionLineType,\n        isConnectable: nodesConnectable,\n        CustomConnectionLineComponent: connectionLineComponent\n      })\n    })]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nconst selector$2 = s => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport(_ref59) {\n  let {\n    children\n  } = _ref59;\n  const transform = useStore(selector$2);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform\n    },\n    children: children\n  });\n}\nfunction useOnInitHandler(onInit) {\n  const rfInstance = useReactFlow();\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(() => onInit(rfInstance), 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nconst GraphView = _ref60 => {\n  let {\n    nodeTypes,\n    edgeTypes,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onInit,\n    onNodeClick,\n    onEdgeClick,\n    onNodeDoubleClick,\n    onEdgeDoubleClick,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onSelectionContextMenu,\n    onSelectionStart,\n    onSelectionEnd,\n    connectionLineType,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    deleteKeyCode,\n    onlyRenderVisibleElements,\n    elementsSelectable,\n    selectNodesOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    defaultMarkerColor,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    edgeUpdaterRadius,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    noDragClassName,\n    noWheelClassName,\n    noPanClassName,\n    elevateEdgesOnSelect,\n    disableKeyboardA11y,\n    nodeOrigin,\n    nodeExtent,\n    rfId\n  } = _ref60;\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypes,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId\n      }), jsx(\"div\", {\n        className: \"react-flow__edgelabel-renderer\"\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypes,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nconst infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nconst initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: ''\n};\nconst createRFStore = () => createStore((set, get) => ({\n  ...initialState,\n  setNodes: nodes => {\n    const {\n      nodeInternals,\n      nodeOrigin,\n      elevateNodesOnSelect\n    } = get();\n    set({\n      nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n    });\n  },\n  getNodes: () => {\n    return Array.from(get().nodeInternals.values());\n  },\n  setEdges: edges => {\n    const {\n      defaultEdgeOptions = {}\n    } = get();\n    set({\n      edges: edges.map(e => ({\n        ...defaultEdgeOptions,\n        ...e\n      }))\n    });\n  },\n  setDefaultNodesAndEdges: (nodes, edges) => {\n    const hasDefaultNodes = typeof nodes !== 'undefined';\n    const hasDefaultEdges = typeof edges !== 'undefined';\n    const nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n    const nextEdges = hasDefaultEdges ? edges : [];\n    set({\n      nodeInternals,\n      edges: nextEdges,\n      hasDefaultNodes,\n      hasDefaultEdges\n    });\n  },\n  updateNodeDimensions: updates => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      fitViewOnInit,\n      fitViewOnInitDone,\n      fitViewOnInitOptions,\n      domNode,\n      nodeOrigin\n    } = get();\n    const viewportNode = domNode?.querySelector('.react-flow__viewport');\n    if (!viewportNode) {\n      return;\n    }\n    const style = window.getComputedStyle(viewportNode);\n    const {\n      m22: zoom\n    } = new window.DOMMatrixReadOnly(style.transform);\n    const changes = updates.reduce((res, update) => {\n      const node = nodeInternals.get(update.id);\n      if (node) {\n        const dimensions = getDimensions(update.nodeElement);\n        const doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n        if (doUpdate) {\n          nodeInternals.set(node.id, {\n            ...node,\n            [internalsSymbol]: {\n              ...node[internalsSymbol],\n              handleBounds: {\n                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n              }\n            },\n            ...dimensions\n          });\n          res.push({\n            id: node.id,\n            type: 'dimensions',\n            dimensions\n          });\n        }\n      }\n      return res;\n    }, []);\n    const nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && fitView(get, {\n      initial: true,\n      ...fitViewOnInitOptions\n    });\n    set({\n      nodeInternals: new Map(nodeInternals),\n      fitViewOnInitDone: nextFitViewOnInitDone\n    });\n    if (changes?.length > 0) {\n      onNodesChange?.(changes);\n    }\n  },\n  updateNodePositions: function (nodeDragItems) {\n    let positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const {\n      triggerNodeChanges\n    } = get();\n    const changes = nodeDragItems.map(node => {\n      const change = {\n        id: node.id,\n        type: 'position',\n        dragging\n      };\n      if (positionChanged) {\n        change.positionAbsolute = node.positionAbsolute;\n        change.position = node.position;\n      }\n      return change;\n    });\n    triggerNodeChanges(changes);\n  },\n  triggerNodeChanges: changes => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      hasDefaultNodes,\n      nodeOrigin,\n      getNodes,\n      elevateNodesOnSelect\n    } = get();\n    if (changes?.length) {\n      if (hasDefaultNodes) {\n        const nodes = applyNodeChanges(changes, getNodes());\n        const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n        set({\n          nodeInternals: nextNodeInternals\n        });\n      }\n      onNodesChange?.(changes);\n    }\n  },\n  addSelectedNodes: selectedNodeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedNodes;\n    let changedEdges = null;\n    if (multiSelectionActive) {\n      changedNodes = selectedNodeIds.map(nodeId => createSelectionChange(nodeId, true));\n    } else {\n      changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n      changedEdges = getSelectionChanges(edges, []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  addSelectedEdges: selectedEdgeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedEdges;\n    let changedNodes = null;\n    if (multiSelectionActive) {\n      changedEdges = selectedEdgeIds.map(edgeId => createSelectionChange(edgeId, true));\n    } else {\n      changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n      changedNodes = getSelectionChanges(getNodes(), []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  unselectNodesAndEdges: function () {\n    let {\n      nodes,\n      edges\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      edges: storeEdges,\n      getNodes\n    } = get();\n    const nodesToUnselect = nodes ? nodes : getNodes();\n    const edgesToUnselect = edges ? edges : storeEdges;\n    const changedNodes = nodesToUnselect.map(n => {\n      n.selected = false;\n      return createSelectionChange(n.id, false);\n    });\n    const changedEdges = edgesToUnselect.map(edge => createSelectionChange(edge.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  setMinZoom: minZoom => {\n    const {\n      d3Zoom,\n      maxZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      minZoom\n    });\n  },\n  setMaxZoom: maxZoom => {\n    const {\n      d3Zoom,\n      minZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      maxZoom\n    });\n  },\n  setTranslateExtent: translateExtent => {\n    get().d3Zoom?.translateExtent(translateExtent);\n    set({\n      translateExtent\n    });\n  },\n  resetSelectedElements: () => {\n    const {\n      edges,\n      getNodes\n    } = get();\n    const nodes = getNodes();\n    const nodesToUnselect = nodes.filter(e => e.selected).map(n => createSelectionChange(n.id, false));\n    const edgesToUnselect = edges.filter(e => e.selected).map(e => createSelectionChange(e.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes: nodesToUnselect,\n      changedEdges: edgesToUnselect,\n      get,\n      set\n    });\n  },\n  setNodeExtent: nodeExtent => {\n    const {\n      nodeInternals\n    } = get();\n    nodeInternals.forEach(node => {\n      node.positionAbsolute = clampPosition(node.position, nodeExtent);\n    });\n    set({\n      nodeExtent,\n      nodeInternals: new Map(nodeInternals)\n    });\n  },\n  cancelConnection: () => set({\n    connectionNodeId: initialState.connectionNodeId,\n    connectionHandleId: initialState.connectionHandleId\n  }),\n  reset: () => set({\n    ...initialState\n  })\n}));\nconst ReactFlowProvider = _ref61 => {\n  let {\n    children\n  } = _ref61;\n  const storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nconst Wrapper = _ref62 => {\n  let {\n    children\n  } = _ref62;\n  const isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  const typesKeysRef = useRef(null);\n  const typesParsed = useMemo(() => {\n    if (process.env.NODE_ENV === 'development') {\n      const typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        devWarn(\"It looks like you have created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them. Help: https://reactflow.dev/error#200\");\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nconst defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nconst defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nconst wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nconst ReactFlow = forwardRef((_ref63, ref) => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    className,\n    nodeTypes = defaultNodeTypes,\n    edgeTypes = defaultEdgeTypes,\n    onNodeClick,\n    onEdgeClick,\n    onInit,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onNodeDoubleClick,\n    onNodeDragStart,\n    onNodeDrag,\n    onNodeDragStop,\n    onNodesDelete,\n    onEdgesDelete,\n    onSelectionChange,\n    onSelectionDragStart,\n    onSelectionDrag,\n    onSelectionDragStop,\n    onSelectionContextMenu,\n    onSelectionStart,\n    onSelectionEnd,\n    connectionMode = ConnectionMode.Strict,\n    connectionLineType = ConnectionLineType.Bezier,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    deleteKeyCode = 'Backspace',\n    selectionKeyCode = 'Shift',\n    selectionOnDrag = false,\n    selectionMode = SelectionMode.Full,\n    panActivationKeyCode = 'Space',\n    multiSelectionKeyCode = 'Meta',\n    zoomActivationKeyCode = 'Meta',\n    snapToGrid = false,\n    snapGrid = initSnapGrid,\n    onlyRenderVisibleElements = false,\n    selectNodesOnDrag = true,\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    nodeOrigin = initNodeOrigin,\n    edgesFocusable,\n    elementsSelectable,\n    defaultViewport = initDefaultViewport,\n    minZoom = 0.5,\n    maxZoom = 2,\n    translateExtent = infiniteExtent,\n    preventScrolling = true,\n    nodeExtent,\n    defaultMarkerColor = '#b1b1b7',\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    panOnDrag = true,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    children,\n    onEdgeUpdate,\n    onEdgeContextMenu,\n    onEdgeDoubleClick,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    edgeUpdaterRadius = 10,\n    onNodesChange,\n    onEdgesChange,\n    noDragClassName = 'nodrag',\n    noWheelClassName = 'nowheel',\n    noPanClassName = 'nopan',\n    fitView = false,\n    fitViewOptions,\n    connectOnClick = true,\n    attributionPosition,\n    proOptions,\n    defaultEdgeOptions,\n    elevateNodesOnSelect = true,\n    elevateEdgesOnSelect = false,\n    disableKeyboardA11y = false,\n    style,\n    id,\n    ...rest\n  } = _ref63;\n  const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  const rfId = id || '1';\n  return jsx(\"div\", {\n    ...rest,\n    style: {\n      ...style,\n      ...wrapperStyle\n    },\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id,\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypesWrapped,\n        edgeTypes: edgeTypesWrapped,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        selectionOnDrag: selectionOnDrag,\n        selectionMode: selectionMode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        panActivationKeyCode: panActivationKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onSelectionStart: onSelectionStart,\n        onSelectionEnd: onSelectionEnd,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        nodesFocusable: nodesFocusable,\n        edgesFocusable: edgesFocusable,\n        elementsSelectable: elementsSelectable,\n        elevateNodesOnSelect: elevateNodesOnSelect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        rfId: rfId\n      }), jsx(Wrapper$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), jsx(A11yDescriptions, {\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n});\nReactFlow.displayName = 'ReactFlow';\nconst selector$1 = s => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer(_ref64) {\n  let {\n    children\n  } = _ref64;\n  const edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  const store = useStoreApi();\n  return useCallback(id => {\n    const {\n      domNode,\n      updateNodeDimensions\n    } = store.getState();\n    const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\n    if (nodeElement) {\n      requestAnimationFrame(() => updateNodeDimensions([{\n        id,\n        nodeElement,\n        forceUpdate: true\n      }]));\n    }\n  }, []);\n}\nconst nodesSelector = state => state.getNodes();\nfunction useNodes() {\n  const nodes = useStore(nodesSelector);\n  return nodes;\n}\nconst edgesSelector = state => state.edges;\nfunction useEdges() {\n  const edges = useStore(edgesSelector);\n  return edges;\n}\nconst viewportSelector = state => ({\n  x: state.transform[0],\n  y: state.transform[1],\n  zoom: state.transform[2]\n});\nfunction useViewport() {\n  const viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return initialItems => {\n    const [items, setItems] = useState(initialItems);\n    const onItemsChange = useCallback(changes => setItems(items => applyChanges(changes, items)), []);\n    return [items, setItems, onItemsChange];\n  };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref65) {\n  let {\n    onStart,\n    onChange,\n    onEnd\n  } = _ref65;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(() => {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(() => {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref66) {\n  let {\n    onChange\n  } = _ref66;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nconst selector = s => {\n  if (s.nodeInternals.size === 0) {\n    return false;\n  }\n  return s.getNodes().every(n => n[internalsSymbol]?.handleBounds !== undefined);\n};\nfunction useNodesInitialized() {\n  const initialized = useStore(selector);\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStore","useStore$1","createStore","shallow","drag","select","pointer","zoomIdentity","zoom","createPortal","StoreContext","Provider$1","Provider","errorMessage","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$f","s","userSelectionActive","Panel","position","children","className","style","rest","pointerEvents","positionClasses","split","Attribution","proOptions","hideAttribution","href","target","rel","EdgeText","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","edgeTextBbox","setEdgeTextBbox","width","height","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","max","Math","clampPosition","extent","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","boxToRect","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","kbEvent","nativeEvent","composedPath","ctrlKey","metaKey","shiftKey","includes","nodeName","hasAttribute","closest","BaseEdge","path","labelX","labelY","markerEnd","markerStart","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","id","handler","undefined","edge","edges","find","e","getEdgeCenter","sourceX","sourceY","targetX","targetY","xOffset","abs","centerX","yOffset","centerY","getBezierEdgeCenter","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","pos","x1","y1","Left","Right","getSimpleBezierPath","sourcePosition","Bottom","targetPosition","Top","SimpleBezierEdge","handleDirections","getDirection","source","distance","a","b","sqrt","pow","getPoints","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","borderRadius","reduce","res","p","i","segment","length","SmoothStepEdge","pathOptions","StepEdge","props","getStraightPath","StraightEdge","calculateControlOffset","curvature","getControlWithCurvature","getBezierPath","BezierEdge","NodeIdContext","Consumer","useNodeId","nodeId","checkElementBelowIsValid","connectionMode","isTarget","handleId","isValidConnection","doc","elementBelow","elementFromPoint","clientX","clientY","elementBelowIsTarget","classList","contains","elementBelowIsSource","result","isValid","connection","sourceHandle","targetHandle","isHoveringHandle","elementBelowNodeId","getAttribute","elementBelowHandleId","Strict","resetRecentHandle","hoveredHandle","remove","handleMouseDown","onConnect","elementEdgeUpdaterType","onEdgeUpdateEnd","reactFlowNode","onConnectStart","handleType","containerBounds","getBoundingClientRect","recentHoveredHandle","connectionPosition","left","top","connectionNodeId","connectionHandleId","connectionHandleType","onMouseMove","add","toggle","onMouseUp","onConnectEnd","removeEventListener","addEventListener","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","concat","updateEdge","oldEdge","newConnection","foundEdge","pointToRendererPoint","snapToGrid","tx","ty","tScale","snapX","snapY","round","getNodePositionWithOrigin","nodeOrigin","getRectOfNodes","box","currBox","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","bounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","alwaysValid","selector$e","connectionStartHandle","connectOnClick","noPanClassName","Handle","type","isConnectable","onMouseDown","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","onMouseDownHandler","button","onClick","onClickConnectStart","onClickConnectEnd","connectable","connecting","Handle$1","DefaultNode","data","DefaultNode$1","InputNode","InputNode$1","OutputNode","OutputNode$1","GroupNode","selector$d","selectedNodes","getNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","onSelectionChange","changeSelector","Wrapper$1","storeHasSelectionChange","selector$c","setNodes","setEdges","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","value","setStoreState","useDirectStoreUpdater","StoreUpdater","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$b","ariaLiveMessage","AriaLiveMessage","A11yDescriptions","disableKeyboardA11y","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseEnter","onMouseOut","cx","cy","r","stroke","wrapEdge","EdgeComponent","EdgeWrapper","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","onContextMenu","onMouseLeave","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","ariaLabel","isFocusable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","addSelectedEdges","nodesSelectionActive","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","handleEdgeUpdate","onKeyDown","unselectNodesAndEdges","unselect","blur","onDoubleClick","tabIndex","role","createEdgeTypes","edgeTypes","standardTypes","default","straight","bezier","step","smoothstep","simplebezier","wrappedTypes","specialTypes","k","getHandlePosition","handle","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","handleBounds","isInvalid","isParentSelected","parentNode","get","hasSelector","nodeRef","matches","parentElement","getDragItems","mousePos","Array","from","values","delta","calcNextPosition","nextPosition","currentExtent","parent","parentX","parentY","parentPosition","getEventHandlerParams","dragItems","extentedDragItems","getHandleBounds","nodeElement","handles","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","addSelectedNodes","multiSelectionActive","useGetPointerPosition","getPointerPosition","sourceEvent","touches","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","on","dragHandler","onStart","currentNode","updateNodePositions","hasChange","updatedPos","onDrag","onStop","isDraggable","call","useUpdateNodePositions","updatePositions","xVelo","yVelo","factor","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","xPos","yPos","xPosOrigin","yPosOrigin","resizeObserver","dragHandle","zIndex","isParent","initialized","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","prototype","hasOwnProperty","replace","toLowerCase","currNode","observe","unobserve","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","createNodeTypes","nodeTypes","input","output","group","getPositionWithOrigin","origin","useKeyPress","keyCode","options","keyPressed","setKeyPressed","pressedKeys","Set","keyCodes","keysToWatch","keyCodeArr","isArray","kc","keysFlat","item","downHandler","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","has","eventCode","calculateXYZPosition","parentNodes","parentNodePosition","z","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","currInternals","internals","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","initial","includeHiddenNodes","nodesInitialized","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$a","useViewportHelper","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","nextZoom","useReactFlow","viewportHelper","getNode","getEdges","getEdge","payload","nextNodes","changes","nextEdges","addNodes","currentNodes","addEdges","toObject","viewport","deleteElements","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","useGlobalKeyHandler","deleteKeyCode","multiSelectionKeyCode","deleteKeyPressed","multiSelectionKeyPressed","useResizeHandler","rendererNode","updateDimensions","ResizeObserver","containerStyle","viewChanged","prevViewport","eventViewport","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","selector$9","d3ZoomHandler","ZoomPane","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","domNode","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaY","deltaMode","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","onViewportChange","flowTransform","onViewportChangeStart","paneDragging","onViewportChangeEnd","clearTimeout","setTimeout","zoomScroll","pinchZoom","buttonAllowed","selector$8","userSelectionRect","UserSelection","showSelectionBox","handleParentExpand","updateItem","extendWidth","extendHeight","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","getMousePosition","wrapHandler","containerRef","selector$7","Pane","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","onWheel","startX","startY","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","hasActiveSelection","selector$6","transformString","bboxSelector","NodesSelection","onSelectionContextMenu","focus","preventScroll","NodesSelection$1","selector$5","FlowRenderer","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","selector$4","NodeRenderer","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","nodeType","draggable","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","edgeTree","useVisibleEdges","sourceNode","targetNode","oppositePosition","ConnectionLine","connectionLineStyle","connectionLineType","Bezier","CustomConnectionLineComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","dAttr","pathParams","Step","SmoothStep","SimpleBezier","ArrowSymbol","color","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","Marker","markerUnits","orient","markerWidth","markerHeight","refX","refY","markerSelector","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","m","MarkerDefinitions$1","selector$3","EdgeRenderer","defaultMarkerColor","connectionLineComponent","connectionLineContainerStyle","renderConnectionLine","sourceHandleBounds","sourceIsValid","targetHandleBounds","targetIsValid","edgeType","targetNodeHandles","EdgeRenderer$1","selector$2","Viewport","useOnInitHandler","onInit","rfInstance","isInitialized","GraphView","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","viewportNode","querySelector","getComputedStyle","m22","DOMMatrixReadOnly","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","nodesToUnselect","edgesToUnselect","cancelConnection","ReactFlowProvider","storeRef","Wrapper","isWrapped","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","attributionPosition","nodeTypesWrapped","edgeTypesWrapped","selector$1","EdgeLabelRenderer","edgeLabelRenderer","useUpdateNodeInternals","requestAnimationFrame","nodesSelector","state","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","onChange","onEnd","useOnSelectionChange","useNodesInitialized"],"sources":["/Users/leejeesung/GitHub/reactflow_demo/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport shallow from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\r\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessage = '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#100';\r\nfunction useStore(selector, equalityFn) {\r\n    const store = useContext(StoreContext);\r\n    if (store === null) {\r\n        throw new Error(errorMessage);\r\n    }\r\n    return useStore$1(store, selector, equalityFn);\r\n}\r\nconst useStoreApi = () => {\r\n    const store = useContext(StoreContext);\r\n    if (store === null) {\r\n        throw new Error(errorMessage);\r\n    }\r\n    return useMemo(() => ({\r\n        getState: store.getState,\r\n        setState: store.setState,\r\n        subscribe: store.subscribe,\r\n        destroy: store.destroy,\r\n    }), [store]);\r\n};\n\nconst selector$f = (s) => (s.userSelectionActive ? 'none' : 'all');\r\nfunction Panel({ position, children, className, style, ...rest }) {\r\n    const pointerEvents = useStore(selector$f);\r\n    const positionClasses = `${position}`.split('-');\r\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\r\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\r\n    if (proOptions?.hideAttribution) {\r\n        return null;\r\n    }\r\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\r\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\r\n    const edgeRef = useRef(null);\r\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\r\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\r\n    useEffect(() => {\r\n        if (edgeRef.current) {\r\n            const textBbox = edgeRef.current.getBBox();\r\n            setEdgeTextBbox({\r\n                x: textBbox.x,\r\n                y: textBbox.y,\r\n                width: textBbox.width,\r\n                height: textBbox.height,\r\n            });\r\n        }\r\n    }, [label]);\r\n    if (typeof label === 'undefined' || !label) {\r\n        return null;\r\n    }\r\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\r\n};\r\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\r\n    width: node.offsetWidth,\r\n    height: node.offsetHeight,\r\n});\r\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\r\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\r\n    x: clamp(position.x, extent[0][0], extent[1][0]),\r\n    y: clamp(position.y, extent[0][1], extent[1][1]),\r\n});\r\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\r\nconst getBoundsOfBoxes = (box1, box2) => ({\r\n    x: Math.min(box1.x, box2.x),\r\n    y: Math.min(box1.y, box2.y),\r\n    x2: Math.max(box1.x2, box2.x2),\r\n    y2: Math.max(box1.y2, box2.y2),\r\n});\r\nconst rectToBox = ({ x, y, width, height }) => ({\r\n    x,\r\n    y,\r\n    x2: x + width,\r\n    y2: y + height,\r\n});\r\nconst boxToRect = ({ x, y, x2, y2 }) => ({\r\n    x,\r\n    y,\r\n    width: x2 - x,\r\n    height: y2 - y,\r\n});\r\nconst nodeToRect = (node) => ({\r\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\r\n    width: node.width || 0,\r\n    height: node.height || 0,\r\n});\r\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\r\nconst getOverlappingArea = (rectA, rectB) => {\r\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\r\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\r\n    return Math.ceil(xOverlap * yOverlap);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\r\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\r\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\r\nconst internalsSymbol = Symbol.for('internals');\r\n// used for a11y key board controls for nodes and edges\r\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\r\nconst devWarn = (message) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n        console.warn(`[React Flow]: ${message}`);\r\n    }\r\n};\r\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\r\nfunction isInputDOMNode(event) {\r\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\r\n    // using composed path for handling shadow dom\r\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\r\n    // we want to be able to do a multi selection event if we are in an input field\r\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\r\n        return false;\r\n    }\r\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\r\n    return (['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) ||\r\n        target?.hasAttribute('contenteditable') ||\r\n        !!target?.closest('.nokey'));\r\n}\n\nconst BaseEdge = ({ path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\r\n    return (jsxs(Fragment, { children: [jsx(\"path\", { style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\r\n};\r\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\r\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\r\n        return `url(#${markerEndId})`;\r\n    }\r\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\r\n};\r\nfunction getMouseHandler$1(id, getState, handler) {\r\n    return handler === undefined\r\n        ? handler\r\n        : (event) => {\r\n            const edge = getState().edges.find((e) => e.id === id);\r\n            if (edge) {\r\n                handler(event, { ...edge });\r\n            }\r\n        };\r\n}\r\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\r\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\r\n    const xOffset = Math.abs(targetX - sourceX) / 2;\r\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\r\n    const yOffset = Math.abs(targetY - sourceY) / 2;\r\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\r\n    return [centerX, centerY, xOffset, yOffset];\r\n}\r\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\r\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\r\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\r\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\r\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\r\n    const offsetX = Math.abs(centerX - sourceX);\r\n    const offsetY = Math.abs(centerY - sourceY);\r\n    return [centerX, centerY, offsetX, offsetY];\r\n}\n\nvar ConnectionMode;\r\n(function (ConnectionMode) {\r\n    ConnectionMode[\"Strict\"] = \"strict\";\r\n    ConnectionMode[\"Loose\"] = \"loose\";\r\n})(ConnectionMode || (ConnectionMode = {}));\r\nvar PanOnScrollMode;\r\n(function (PanOnScrollMode) {\r\n    PanOnScrollMode[\"Free\"] = \"free\";\r\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\r\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\r\n})(PanOnScrollMode || (PanOnScrollMode = {}));\r\nvar SelectionMode;\r\n(function (SelectionMode) {\r\n    SelectionMode[\"Partial\"] = \"partial\";\r\n    SelectionMode[\"Full\"] = \"full\";\r\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\r\n(function (ConnectionLineType) {\r\n    ConnectionLineType[\"Bezier\"] = \"default\";\r\n    ConnectionLineType[\"Straight\"] = \"straight\";\r\n    ConnectionLineType[\"Step\"] = \"step\";\r\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\r\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\r\n})(ConnectionLineType || (ConnectionLineType = {}));\r\nvar MarkerType;\r\n(function (MarkerType) {\r\n    MarkerType[\"Arrow\"] = \"arrow\";\r\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\r\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\r\n(function (Position) {\r\n    Position[\"Left\"] = \"left\";\r\n    Position[\"Top\"] = \"top\";\r\n    Position[\"Right\"] = \"right\";\r\n    Position[\"Bottom\"] = \"bottom\";\r\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\r\n    if (pos === Position.Left || pos === Position.Right) {\r\n        return [0.5 * (x1 + x2), y1];\r\n    }\r\n    return [x1, 0.5 * (y1 + y2)];\r\n}\r\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\r\n    const [sourceControlX, sourceControlY] = getControl({\r\n        pos: sourcePosition,\r\n        x1: sourceX,\r\n        y1: sourceY,\r\n        x2: targetX,\r\n        y2: targetY,\r\n    });\r\n    const [targetControlX, targetControlY] = getControl({\r\n        pos: targetPosition,\r\n        x1: targetX,\r\n        y1: targetY,\r\n        x2: sourceX,\r\n        y2: sourceY,\r\n    });\r\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\r\n        sourceX,\r\n        sourceY,\r\n        targetX,\r\n        targetY,\r\n        sourceControlX,\r\n        sourceControlY,\r\n        targetControlX,\r\n        targetControlY,\r\n    });\r\n    return [\r\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\r\n        labelX,\r\n        labelY,\r\n        offsetX,\r\n        offsetY,\r\n    ];\r\n}\r\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getSimpleBezierPath({\r\n        sourceX,\r\n        sourceY,\r\n        sourcePosition,\r\n        targetX,\r\n        targetY,\r\n        targetPosition,\r\n    });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\r\n    [Position.Left]: { x: -1, y: 0 },\r\n    [Position.Right]: { x: 1, y: 0 },\r\n    [Position.Top]: { x: 0, y: -1 },\r\n    [Position.Bottom]: { x: 0, y: 1 },\r\n};\r\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\r\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\r\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\r\n    }\r\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\r\n};\r\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n// ith this function we try to mimic a orthogonal edge routing behaviour\r\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\r\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\r\n    const sourceDir = handleDirections[sourcePosition];\r\n    const targetDir = handleDirections[targetPosition];\r\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\r\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\r\n    const dir = getDirection({\r\n        source: sourceGapped,\r\n        sourcePosition,\r\n        target: targetGapped,\r\n    });\r\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\r\n    const currDir = dir[dirAccessor];\r\n    let points = [];\r\n    let centerX, centerY;\r\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\r\n        sourceX: source.x,\r\n        sourceY: source.y,\r\n        targetX: target.x,\r\n        targetY: target.y,\r\n    });\r\n    // opposite handle positions, default case\r\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\r\n        centerX = center.x || defaultCenterX;\r\n        centerY = center.y || defaultCenterY;\r\n        //    --->\r\n        //    |\r\n        // >---\r\n        const verticalSplit = [\r\n            { x: centerX, y: sourceGapped.y },\r\n            { x: centerX, y: targetGapped.y },\r\n        ];\r\n        //    |\r\n        //  ---\r\n        //  |\r\n        const horizontalSplit = [\r\n            { x: sourceGapped.x, y: centerY },\r\n            { x: targetGapped.x, y: centerY },\r\n        ];\r\n        if (sourceDir[dirAccessor] === currDir) {\r\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\r\n        }\r\n        else {\r\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\r\n        }\r\n    }\r\n    else {\r\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\r\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\r\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\r\n        // this handles edges with same handle positions\r\n        if (dirAccessor === 'x') {\r\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\r\n        }\r\n        else {\r\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\r\n        }\r\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\r\n        if (sourcePosition !== targetPosition) {\r\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\r\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\r\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\r\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\r\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\r\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\r\n            if (flipSourceTarget) {\r\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\r\n            }\r\n        }\r\n        centerX = points[0].x;\r\n        centerY = points[0].y;\r\n    }\r\n    const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\r\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\r\n}\r\nfunction getBend(a, b, c, size) {\r\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\r\n    const { x, y } = b;\r\n    // no bend\r\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\r\n        return `L${x} ${y}`;\r\n    }\r\n    // first segment is horizontal\r\n    if (a.y === y) {\r\n        const xDir = a.x < c.x ? -1 : 1;\r\n        const yDir = a.y < c.y ? 1 : -1;\r\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\r\n    }\r\n    const xDir = a.x < c.x ? 1 : -1;\r\n    const yDir = a.y < c.y ? -1 : 1;\r\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\r\n}\r\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\r\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\r\n        source: { x: sourceX, y: sourceY },\r\n        sourcePosition,\r\n        target: { x: targetX, y: targetY },\r\n        targetPosition,\r\n        center: { x: centerX, y: centerY },\r\n        offset,\r\n    });\r\n    const path = points.reduce((res, p, i) => {\r\n        let segment = '';\r\n        if (i > 0 && i < points.length - 1) {\r\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\r\n        }\r\n        else {\r\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\r\n        }\r\n        res += segment;\r\n        return res;\r\n    }, '');\r\n    return [path, labelX, labelY, offsetX, offsetY];\r\n}\r\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getSmoothStepPath({\r\n        sourceX,\r\n        sourceY,\r\n        sourcePosition,\r\n        targetX,\r\n        targetY,\r\n        targetPosition,\r\n        borderRadius: pathOptions?.borderRadius,\r\n        offset: pathOptions?.offset,\r\n    });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\r\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\r\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\r\n        sourceX,\r\n        sourceY,\r\n        targetX,\r\n        targetY,\r\n    });\r\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\r\n}\r\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\r\n    if (distance >= 0) {\r\n        return 0.5 * distance;\r\n    }\r\n    return curvature * 25 * Math.sqrt(-distance);\r\n}\r\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\r\n    switch (pos) {\r\n        case Position.Left:\r\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\r\n        case Position.Right:\r\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\r\n        case Position.Top:\r\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\r\n        case Position.Bottom:\r\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\r\n    }\r\n}\r\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\r\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\r\n        pos: sourcePosition,\r\n        x1: sourceX,\r\n        y1: sourceY,\r\n        x2: targetX,\r\n        y2: targetY,\r\n        c: curvature,\r\n    });\r\n    const [targetControlX, targetControlY] = getControlWithCurvature({\r\n        pos: targetPosition,\r\n        x1: targetX,\r\n        y1: targetY,\r\n        x2: sourceX,\r\n        y2: sourceY,\r\n        c: curvature,\r\n    });\r\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\r\n        sourceX,\r\n        sourceY,\r\n        targetX,\r\n        targetY,\r\n        sourceControlX,\r\n        sourceControlY,\r\n        targetControlX,\r\n        targetControlY,\r\n    });\r\n    return [\r\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\r\n        labelX,\r\n        labelY,\r\n        offsetX,\r\n        offsetY,\r\n    ];\r\n}\r\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\r\n    const [path, labelX, labelY] = getBezierPath({\r\n        sourceX,\r\n        sourceY,\r\n        sourcePosition,\r\n        targetX,\r\n        targetY,\r\n        targetPosition,\r\n        curvature: pathOptions?.curvature,\r\n    });\r\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\r\n});\r\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\r\nconst Provider = NodeIdContext.Provider;\r\nNodeIdContext.Consumer;\r\nconst useNodeId = () => {\r\n    const nodeId = useContext(NodeIdContext);\r\n    return nodeId;\r\n};\n\n// checks if element below mouse is a handle and returns connection in form of an object { source: 123, target: 312 }\r\nfunction checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc) {\r\n    const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\r\n    const elementBelowIsTarget = elementBelow?.classList.contains('target') || false;\r\n    const elementBelowIsSource = elementBelow?.classList.contains('source') || false;\r\n    const result = {\r\n        elementBelow,\r\n        isValid: false,\r\n        connection: { source: null, target: null, sourceHandle: null, targetHandle: null },\r\n        isHoveringHandle: false,\r\n    };\r\n    if (elementBelow && (elementBelowIsTarget || elementBelowIsSource)) {\r\n        result.isHoveringHandle = true;\r\n        const elementBelowNodeId = elementBelow.getAttribute('data-nodeid');\r\n        const elementBelowHandleId = elementBelow.getAttribute('data-handleid');\r\n        const connection = isTarget\r\n            ? {\r\n                source: elementBelowNodeId,\r\n                sourceHandle: elementBelowHandleId,\r\n                target: nodeId,\r\n                targetHandle: handleId,\r\n            }\r\n            : {\r\n                source: nodeId,\r\n                sourceHandle: handleId,\r\n                target: elementBelowNodeId,\r\n                targetHandle: elementBelowHandleId,\r\n            };\r\n        result.connection = connection;\r\n        // in strict mode we don't allow target to target or source to source connections\r\n        const isValid = connectionMode === ConnectionMode.Strict\r\n            ? (isTarget && elementBelowIsSource) || (!isTarget && elementBelowIsTarget)\r\n            : elementBelowNodeId !== nodeId || elementBelowHandleId !== handleId;\r\n        if (isValid) {\r\n            result.isValid = isValidConnection(connection);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction resetRecentHandle(hoveredHandle) {\r\n    hoveredHandle?.classList.remove('react-flow__handle-valid');\r\n    hoveredHandle?.classList.remove('react-flow__handle-connecting');\r\n}\r\nfunction handleMouseDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, elementEdgeUpdaterType, onEdgeUpdateEnd, }) {\r\n    const reactFlowNode = event.target.closest('.react-flow');\r\n    // when react-flow is used inside a shadow root we can't use document\r\n    const doc = getHostForElement(event.target);\r\n    if (!doc) {\r\n        return;\r\n    }\r\n    const elementBelow = doc.elementFromPoint(event.clientX, event.clientY);\r\n    const elementBelowIsTarget = elementBelow?.classList.contains('target');\r\n    const elementBelowIsSource = elementBelow?.classList.contains('source');\r\n    if (!reactFlowNode || (!elementBelowIsTarget && !elementBelowIsSource && !elementEdgeUpdaterType)) {\r\n        return;\r\n    }\r\n    const { onConnectStart, connectionMode } = getState();\r\n    const handleType = elementEdgeUpdaterType ? elementEdgeUpdaterType : elementBelowIsTarget ? 'target' : 'source';\r\n    const containerBounds = reactFlowNode.getBoundingClientRect();\r\n    let recentHoveredHandle;\r\n    setState({\r\n        connectionPosition: {\r\n            x: event.clientX - containerBounds.left,\r\n            y: event.clientY - containerBounds.top,\r\n        },\r\n        connectionNodeId: nodeId,\r\n        connectionHandleId: handleId,\r\n        connectionHandleType: handleType,\r\n    });\r\n    onConnectStart?.(event, { nodeId, handleId, handleType });\r\n    function onMouseMove(event) {\r\n        setState({\r\n            connectionPosition: {\r\n                x: event.clientX - containerBounds.left,\r\n                y: event.clientY - containerBounds.top,\r\n            },\r\n        });\r\n        const { connection, elementBelow, isValid, isHoveringHandle } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\r\n        if (!isHoveringHandle) {\r\n            return resetRecentHandle(recentHoveredHandle);\r\n        }\r\n        if (connection.source !== connection.target && elementBelow) {\r\n            resetRecentHandle(recentHoveredHandle);\r\n            recentHoveredHandle = elementBelow;\r\n            elementBelow.classList.add('react-flow__handle-connecting');\r\n            elementBelow.classList.toggle('react-flow__handle-valid', isValid);\r\n        }\r\n    }\r\n    function onMouseUp(event) {\r\n        const { connection, isValid } = checkElementBelowIsValid(event, connectionMode, isTarget, nodeId, handleId, isValidConnection, doc);\r\n        if (isValid) {\r\n            onConnect?.(connection);\r\n        }\r\n        getState().onConnectEnd?.(event);\r\n        if (elementEdgeUpdaterType && onEdgeUpdateEnd) {\r\n            onEdgeUpdateEnd(event);\r\n        }\r\n        resetRecentHandle(recentHoveredHandle);\r\n        setState({\r\n            connectionNodeId: null,\r\n            connectionHandleId: null,\r\n            connectionHandleType: null,\r\n        });\r\n        doc.removeEventListener('mousemove', onMouseMove);\r\n        doc.removeEventListener('mouseup', onMouseUp);\r\n    }\r\n    doc.addEventListener('mousemove', onMouseMove);\r\n    doc.addEventListener('mouseup', onMouseUp);\r\n}\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\r\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\r\nconst getOutgoers = (node, nodes, edges) => {\r\n    if (!isNode(node)) {\r\n        return [];\r\n    }\r\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\r\n    return nodes.filter((n) => outgoerIds.includes(n.id));\r\n};\r\nconst getIncomers = (node, nodes, edges) => {\r\n    if (!isNode(node)) {\r\n        return [];\r\n    }\r\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\r\n    return nodes.filter((n) => incomersIds.includes(n.id));\r\n};\r\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\r\nconst getMarkerId = (marker, rfId) => {\r\n    if (typeof marker === 'undefined') {\r\n        return '';\r\n    }\r\n    if (typeof marker === 'string') {\r\n        return marker;\r\n    }\r\n    const idPrefix = rfId ? `${rfId}__` : '';\r\n    return `${idPrefix}${Object.keys(marker)\r\n        .sort()\r\n        .map((key) => `${key}=${marker[key]}`)\r\n        .join('&')}`;\r\n};\r\nconst connectionExists = (edge, edges) => {\r\n    return edges.some((el) => el.source === edge.source &&\r\n        el.target === edge.target &&\r\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\r\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\r\n};\r\nconst addEdge = (edgeParams, edges) => {\r\n    if (!edgeParams.source || !edgeParams.target) {\r\n        devWarn(\"Can't create edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\r\n        return edges;\r\n    }\r\n    let edge;\r\n    if (isEdge(edgeParams)) {\r\n        edge = { ...edgeParams };\r\n    }\r\n    else {\r\n        edge = {\r\n            ...edgeParams,\r\n            id: getEdgeId(edgeParams),\r\n        };\r\n    }\r\n    if (connectionExists(edge, edges)) {\r\n        return edges;\r\n    }\r\n    return edges.concat(edge);\r\n};\r\nconst updateEdge = (oldEdge, newConnection, edges) => {\r\n    if (!newConnection.source || !newConnection.target) {\r\n        devWarn(\"Can't create a new edge. An edge needs a source and a target. Help: https://reactflow.dev/error#600\");\r\n        return edges;\r\n    }\r\n    const foundEdge = edges.find((e) => e.id === oldEdge.id);\r\n    if (!foundEdge) {\r\n        devWarn(`The old edge with id=${oldEdge.id} does not exist. Help: https://reactflow.dev/error#700`);\r\n        return edges;\r\n    }\r\n    // Remove old edge and create the new edge with parameters of old edge.\r\n    const edge = {\r\n        ...oldEdge,\r\n        id: getEdgeId(newConnection),\r\n        source: newConnection.source,\r\n        target: newConnection.target,\r\n        sourceHandle: newConnection.sourceHandle,\r\n        targetHandle: newConnection.targetHandle,\r\n    };\r\n    return edges.filter((e) => e.id !== oldEdge.id).concat(edge);\r\n};\r\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\r\n    const position = {\r\n        x: (x - tx) / tScale,\r\n        y: (y - ty) / tScale,\r\n    };\r\n    if (snapToGrid) {\r\n        return {\r\n            x: snapX * Math.round(position.x / snapX),\r\n            y: snapY * Math.round(position.y / snapY),\r\n        };\r\n    }\r\n    return position;\r\n};\r\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\r\n    if (!node) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            positionAbsolute: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n        };\r\n    }\r\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\r\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\r\n    const position = {\r\n        x: node.position.x - offsetX,\r\n        y: node.position.y - offsetY,\r\n    };\r\n    return {\r\n        ...position,\r\n        positionAbsolute: node.positionAbsolute\r\n            ? {\r\n                x: node.positionAbsolute.x - offsetX,\r\n                y: node.positionAbsolute.y - offsetY,\r\n            }\r\n            : position,\r\n    };\r\n};\r\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\r\n    if (nodes.length === 0) {\r\n        return { x: 0, y: 0, width: 0, height: 0 };\r\n    }\r\n    const box = nodes.reduce((currBox, node) => {\r\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\r\n        return getBoundsOfBoxes(currBox, rectToBox({\r\n            x,\r\n            y,\r\n            width: node.width || 0,\r\n            height: node.height || 0,\r\n        }));\r\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\r\n    return boxToRect(box);\r\n};\r\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \r\n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\r\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\r\n    const paneRect = {\r\n        x: (rect.x - tx) / tScale,\r\n        y: (rect.y - ty) / tScale,\r\n        width: rect.width / tScale,\r\n        height: rect.height / tScale,\r\n    };\r\n    const visibleNodes = [];\r\n    nodeInternals.forEach((node) => {\r\n        const { width, height, selectable = true, hidden = false } = node;\r\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\r\n            return false;\r\n        }\r\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\r\n        const nodeRect = {\r\n            x: positionAbsolute.x,\r\n            y: positionAbsolute.y,\r\n            width: width || 0,\r\n            height: height || 0,\r\n        };\r\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\r\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\r\n        const partiallyVisible = partially && overlappingArea > 0;\r\n        const area = (width || 0) * (height || 0);\r\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\r\n        if (isVisible || node.dragging) {\r\n            visibleNodes.push(node);\r\n        }\r\n    });\r\n    return visibleNodes;\r\n};\r\nconst getConnectedEdges = (nodes, edges) => {\r\n    const nodeIds = nodes.map((node) => node.id);\r\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\r\n};\r\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\r\n    const xZoom = width / (bounds.width * (1 + padding));\r\n    const yZoom = height / (bounds.height * (1 + padding));\r\n    const zoom = Math.min(xZoom, yZoom);\r\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\r\n    const boundsCenterX = bounds.x + bounds.width / 2;\r\n    const boundsCenterY = bounds.y + bounds.height / 2;\r\n    const x = width / 2 - boundsCenterX * clampedZoom;\r\n    const y = height / 2 - boundsCenterY * clampedZoom;\r\n    return [x, y, clampedZoom];\r\n};\r\nconst getD3Transition = (selection, duration = 0) => {\r\n    return selection.transition().duration(duration);\r\n};\n\nconst alwaysValid = () => true;\r\nconst selector$e = (s) => ({\r\n    connectionStartHandle: s.connectionStartHandle,\r\n    connectOnClick: s.connectOnClick,\r\n    noPanClassName: s.noPanClassName,\r\n});\r\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection = alwaysValid, isConnectable = true, id, onConnect, children, className, onMouseDown, ...rest }, ref) => {\r\n    const store = useStoreApi();\r\n    // @fixme: remove type assertion and handle nodeId === null\r\n    const nodeId = useNodeId();\r\n    const { connectionStartHandle, connectOnClick, noPanClassName } = useStore(selector$e, shallow);\r\n    const handleId = id || null;\r\n    const isTarget = type === 'target';\r\n    const onConnectExtended = (params) => {\r\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\r\n        const edgeParams = {\r\n            ...defaultEdgeOptions,\r\n            ...params,\r\n        };\r\n        if (hasDefaultEdges) {\r\n            const { edges } = store.getState();\r\n            store.setState({ edges: addEdge(edgeParams, edges) });\r\n        }\r\n        onConnectAction?.(edgeParams);\r\n        onConnect?.(edgeParams);\r\n    };\r\n    const onMouseDownHandler = (event) => {\r\n        if (event.button === 0) {\r\n            handleMouseDown({\r\n                event,\r\n                handleId,\r\n                nodeId,\r\n                onConnect: onConnectExtended,\r\n                isTarget,\r\n                getState: store.getState,\r\n                setState: store.setState,\r\n                isValidConnection,\r\n            });\r\n        }\r\n        onMouseDown?.(event);\r\n    };\r\n    const onClick = (event) => {\r\n        const { onClickConnectStart, onClickConnectEnd, connectionMode } = store.getState();\r\n        if (!connectionStartHandle) {\r\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\r\n            store.setState({ connectionStartHandle: { nodeId, type, handleId } });\r\n            return;\r\n        }\r\n        const doc = getHostForElement(event.target);\r\n        const { connection, isValid } = checkElementBelowIsValid(event, connectionMode, connectionStartHandle.type === 'target', connectionStartHandle.nodeId, connectionStartHandle.handleId || null, isValidConnection, doc);\r\n        if (isValid) {\r\n            onConnectExtended(connection);\r\n        }\r\n        onClickConnectEnd?.(event);\r\n        store.setState({ connectionStartHandle: null });\r\n    };\r\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, className: cc([\r\n            'react-flow__handle',\r\n            `react-flow__handle-${position}`,\r\n            'nodrag',\r\n            noPanClassName,\r\n            className,\r\n            {\r\n                source: !isTarget,\r\n                target: isTarget,\r\n                connectable: isConnectable,\r\n                connecting: connectionStartHandle?.nodeId === nodeId &&\r\n                    connectionStartHandle?.handleId === handleId &&\r\n                    connectionStartHandle?.type === type,\r\n            },\r\n        ]), onMouseDown: onMouseDownHandler, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\r\n});\r\nHandle.displayName = 'Handle';\r\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\r\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\r\n};\r\nDefaultNode.displayName = 'DefaultNode';\r\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\r\nInputNode.displayName = 'InputNode';\r\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\r\nOutputNode.displayName = 'OutputNode';\r\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\r\nGroupNode.displayName = 'GroupNode';\n\nconst selector$d = (s) => ({\r\n    selectedNodes: s.getNodes().filter((n) => n.selected),\r\n    selectedEdges: s.edges.filter((e) => e.selected),\r\n});\r\nconst selectId = (obj) => obj.id;\r\nfunction areEqual(a, b) {\r\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\r\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\r\n}\r\n// This is just a helper component for calling the onSelectionChange listener.\r\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\r\nconst SelectionListener = memo(({ onSelectionChange }) => {\r\n    const store = useStoreApi();\r\n    const { selectedNodes, selectedEdges } = useStore(selector$d, areEqual);\r\n    useEffect(() => {\r\n        const params = { nodes: selectedNodes, edges: selectedEdges };\r\n        onSelectionChange?.(params);\r\n        store.getState().onSelectionChange?.(params);\r\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\r\n    return null;\r\n});\r\nSelectionListener.displayName = 'SelectionListener';\r\nconst changeSelector = (s) => !!s.onSelectionChange;\r\nfunction Wrapper$1({ onSelectionChange }) {\r\n    const storeHasSelectionChange = useStore(changeSelector);\r\n    if (onSelectionChange || storeHasSelectionChange) {\r\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\r\n    }\r\n    return null;\r\n}\n\nconst selector$c = (s) => ({\r\n    setNodes: s.setNodes,\r\n    setEdges: s.setEdges,\r\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\r\n    setMinZoom: s.setMinZoom,\r\n    setMaxZoom: s.setMaxZoom,\r\n    setTranslateExtent: s.setTranslateExtent,\r\n    setNodeExtent: s.setNodeExtent,\r\n    reset: s.reset,\r\n});\r\nfunction useStoreUpdater(value, setStoreState) {\r\n    useEffect(() => {\r\n        if (typeof value !== 'undefined') {\r\n            setStoreState(value);\r\n        }\r\n    }, [value]);\r\n}\r\n// updates with values in store that don't have a dedicated setter function\r\nfunction useDirectStoreUpdater(key, value, setState) {\r\n    useEffect(() => {\r\n        if (typeof value !== 'undefined') {\r\n            setState({ [key]: value });\r\n        }\r\n    }, [value]);\r\n}\r\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, }) => {\r\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$c, shallow);\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\r\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\r\n        return () => {\r\n            reset();\r\n        };\r\n    }, []);\r\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\r\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\r\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\r\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\r\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\r\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\r\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\r\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\r\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\r\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\r\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\r\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\r\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\r\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\r\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\r\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\r\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\r\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\r\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\r\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\r\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\r\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\r\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\r\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\r\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\r\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\r\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\r\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\r\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\r\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\r\n    useDirectStoreUpdater('rfId', rfId, store.setState);\r\n    useStoreUpdater(nodes, setNodes);\r\n    useStoreUpdater(edges, setEdges);\r\n    useStoreUpdater(minZoom, setMinZoom);\r\n    useStoreUpdater(maxZoom, setMaxZoom);\r\n    useStoreUpdater(translateExtent, setTranslateExtent);\r\n    useStoreUpdater(nodeExtent, setNodeExtent);\r\n    return null;\r\n};\n\nconst style = { display: 'none' };\r\nconst ariaLiveStyle = {\r\n    position: 'absolute',\r\n    width: 1,\r\n    height: 1,\r\n    margin: -1,\r\n    border: 0,\r\n    padding: 0,\r\n    overflow: 'hidden',\r\n    clip: 'rect(0px, 0px, 0px, 0px)',\r\n    clipPath: 'inset(100%)',\r\n};\r\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\r\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\r\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\r\nconst selector$b = (s) => s.ariaLiveMessage;\r\nfunction AriaLiveMessage({ rfId }) {\r\n    const ariaLiveMessage = useStore(selector$b);\r\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\r\n}\r\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\r\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\r\n}\n\nconst shiftX = (x, shift, position) => {\r\n    if (position === Position.Left)\r\n        return x - shift;\r\n    if (position === Position.Right)\r\n        return x + shift;\r\n    return x;\r\n};\r\nconst shiftY = (y, shift, position) => {\r\n    if (position === Position.Top)\r\n        return y - shift;\r\n    if (position === Position.Bottom)\r\n        return y + shift;\r\n    return y;\r\n};\r\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\r\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nvar wrapEdge = (EdgeComponent) => {\r\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, pathOptions, interactionWidth, }) => {\r\n        const edgeRef = useRef(null);\r\n        const [updateHover, setUpdateHover] = useState(false);\r\n        const [updating, setUpdating] = useState(false);\r\n        const store = useStoreApi();\r\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\r\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\r\n        if (hidden) {\r\n            return null;\r\n        }\r\n        const onEdgeClick = (event) => {\r\n            const { edges, addSelectedEdges } = store.getState();\r\n            if (elementsSelectable) {\r\n                store.setState({ nodesSelectionActive: false });\r\n                addSelectedEdges([id]);\r\n            }\r\n            if (onClick) {\r\n                const edge = edges.find((e) => e.id === id);\r\n                onClick(event, edge);\r\n            }\r\n        };\r\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\r\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\r\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\r\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\r\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\r\n        const handleEdgeUpdater = (event, isSourceHandle) => {\r\n            const nodeId = isSourceHandle ? target : source;\r\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\r\n            const handleType = isSourceHandle ? 'target' : 'source';\r\n            const isValidConnection = () => true;\r\n            const isTarget = isSourceHandle;\r\n            const edge = store.getState().edges.find((e) => e.id === id);\r\n            setUpdating(true);\r\n            onEdgeUpdateStart?.(event, edge, handleType);\r\n            const _onEdgeUpdateEnd = (evt) => {\r\n                setUpdating(false);\r\n                onEdgeUpdateEnd?.(evt, edge, handleType);\r\n            };\r\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\r\n            handleMouseDown({\r\n                event,\r\n                handleId,\r\n                nodeId,\r\n                onConnect: onConnectEdge,\r\n                isTarget,\r\n                getState: store.getState,\r\n                setState: store.setState,\r\n                isValidConnection,\r\n                elementEdgeUpdaterType: handleType,\r\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\r\n            });\r\n        };\r\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\r\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\r\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\r\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\r\n        const inactive = !elementsSelectable && !onClick;\r\n        const handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\r\n        const onKeyDown = (event) => {\r\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\r\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\r\n                const unselect = event.key === 'Escape';\r\n                if (unselect) {\r\n                    edgeRef.current?.blur();\r\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\r\n                }\r\n                else {\r\n                    addSelectedEdges([id]);\r\n                }\r\n            }\r\n        };\r\n        return (jsxs(\"g\", { className: cc([\r\n                'react-flow__edge',\r\n                `react-flow__edge-${type}`,\r\n                className,\r\n                { selected, animated, inactive, updating: updateHover },\r\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), handleEdgeUpdate && (jsxs(Fragment, { children: [jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" }), jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" })] }))] }));\r\n    };\r\n    EdgeWrapper.displayName = 'EdgeWrapper';\r\n    return memo(EdgeWrapper);\r\n};\n\nfunction createEdgeTypes(edgeTypes) {\r\n    const standardTypes = {\r\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\r\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\r\n        step: wrapEdge((edgeTypes.step || StepEdge)),\r\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\r\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\r\n    };\r\n    const wrappedTypes = {};\r\n    const specialTypes = Object.keys(edgeTypes)\r\n        .filter((k) => !['default', 'bezier'].includes(k))\r\n        .reduce((res, key) => {\r\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\r\n        return res;\r\n    }, wrappedTypes);\r\n    return {\r\n        ...standardTypes,\r\n        ...specialTypes,\r\n    };\r\n}\r\nfunction getHandlePosition(position, nodeRect, handle = null) {\r\n    const x = (handle?.x || 0) + nodeRect.x;\r\n    const y = (handle?.y || 0) + nodeRect.y;\r\n    const width = handle?.width || nodeRect.width;\r\n    const height = handle?.height || nodeRect.height;\r\n    switch (position) {\r\n        case Position.Top:\r\n            return {\r\n                x: x + width / 2,\r\n                y,\r\n            };\r\n        case Position.Right:\r\n            return {\r\n                x: x + width,\r\n                y: y + height / 2,\r\n            };\r\n        case Position.Bottom:\r\n            return {\r\n                x: x + width / 2,\r\n                y: y + height,\r\n            };\r\n        case Position.Left:\r\n            return {\r\n                x,\r\n                y: y + height / 2,\r\n            };\r\n    }\r\n}\r\nfunction getHandle(bounds, handleId) {\r\n    if (!bounds) {\r\n        return null;\r\n    }\r\n    // there is no handleId when there are no multiple handles/ handles with ids\r\n    // so we just pick the first one\r\n    let handle = null;\r\n    if (bounds.length === 1 || !handleId) {\r\n        handle = bounds[0];\r\n    }\r\n    else if (handleId) {\r\n        handle = bounds.find((d) => d.id === handleId);\r\n    }\r\n    return typeof handle === 'undefined' ? null : handle;\r\n}\r\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\r\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\r\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\r\n    return {\r\n        sourceX: sourceHandlePos.x,\r\n        sourceY: sourceHandlePos.y,\r\n        targetX: targetHandlePos.x,\r\n        targetY: targetHandlePos.y,\r\n    };\r\n};\r\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\r\n    const edgeBox = {\r\n        x: Math.min(sourcePos.x, targetPos.x),\r\n        y: Math.min(sourcePos.y, targetPos.y),\r\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\r\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\r\n    };\r\n    if (edgeBox.x === edgeBox.x2) {\r\n        edgeBox.x2 += 1;\r\n    }\r\n    if (edgeBox.y === edgeBox.y2) {\r\n        edgeBox.y2 += 1;\r\n    }\r\n    const viewBox = rectToBox({\r\n        x: (0 - transform[0]) / transform[2],\r\n        y: (0 - transform[1]) / transform[2],\r\n        width: width / transform[2],\r\n        height: height / transform[2],\r\n    });\r\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\r\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\r\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\r\n    return overlappingArea > 0;\r\n}\r\nfunction getNodeData(node) {\r\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\r\n    const isInvalid = !node ||\r\n        !handleBounds ||\r\n        !node.width ||\r\n        !node.height ||\r\n        typeof node.positionAbsolute?.x === 'undefined' ||\r\n        typeof node.positionAbsolute?.y === 'undefined';\r\n    return [\r\n        {\r\n            x: node?.positionAbsolute?.x || 0,\r\n            y: node?.positionAbsolute?.y || 0,\r\n            width: node?.width || 0,\r\n            height: node?.height || 0,\r\n        },\r\n        handleBounds,\r\n        !isInvalid,\r\n    ];\r\n}\n\nfunction isParentSelected(node, nodeInternals) {\r\n    if (!node.parentNode) {\r\n        return false;\r\n    }\r\n    const parentNode = nodeInternals.get(node.parentNode);\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (parentNode.selected) {\r\n        return true;\r\n    }\r\n    return isParentSelected(parentNode, nodeInternals);\r\n}\r\nfunction hasSelector(target, selector, nodeRef) {\r\n    let current = target;\r\n    do {\r\n        if (current?.matches(selector))\r\n            return true;\r\n        if (current === nodeRef.current)\r\n            return false;\r\n        current = current.parentElement;\r\n    } while (current);\r\n    return false;\r\n}\r\n// looks for all selected nodes and created a NodeDragItem for each of them\r\nfunction getDragItems(nodeInternals, mousePos, nodeId) {\r\n    return Array.from(nodeInternals.values())\r\n        .filter((n) => (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)))\r\n        .map((n) => ({\r\n        id: n.id,\r\n        position: n.position || { x: 0, y: 0 },\r\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\r\n        distance: {\r\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\r\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\r\n        },\r\n        delta: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        extent: n.extent,\r\n        parentNode: n.parentNode,\r\n        width: n.width,\r\n        height: n.height,\r\n    }));\r\n}\r\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0]) {\r\n    let currentExtent = node.extent || nodeExtent;\r\n    if (node.extent === 'parent') {\r\n        if (node.parentNode && node.width && node.height) {\r\n            const parent = nodeInternals.get(node.parentNode);\r\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\r\n            currentExtent =\r\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\r\n                    ? [\r\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\r\n                        [\r\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\r\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\r\n                        ],\r\n                    ]\r\n                    : currentExtent;\r\n        }\r\n        else {\r\n            devWarn('Only child nodes can use a parent extent. Help: https://reactflow.dev/error#500');\r\n            currentExtent = nodeExtent;\r\n        }\r\n    }\r\n    else if (node.extent && node.parentNode) {\r\n        const parent = nodeInternals.get(node.parentNode);\r\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\r\n        currentExtent = [\r\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\r\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\r\n        ];\r\n    }\r\n    let parentPosition = { x: 0, y: 0 };\r\n    if (node.parentNode) {\r\n        const parentNode = nodeInternals.get(node.parentNode);\r\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\r\n    }\r\n    const positionAbsolute = currentExtent\r\n        ? clampPosition(nextPosition, currentExtent)\r\n        : nextPosition;\r\n    return {\r\n        position: {\r\n            x: positionAbsolute.x - parentPosition.x,\r\n            y: positionAbsolute.y - parentPosition.y,\r\n        },\r\n        positionAbsolute,\r\n    };\r\n}\r\n// returns two params:\r\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\r\n// 2. array of selected nodes (for multi selections)\r\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\r\n    const extentedDragItems = dragItems.map((n) => {\r\n        const node = nodeInternals.get(n.id);\r\n        return {\r\n            ...node,\r\n            position: n.position,\r\n            positionAbsolute: n.positionAbsolute,\r\n        };\r\n    });\r\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\r\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\r\n    const handles = nodeElement.querySelectorAll(selector);\r\n    if (!handles || !handles.length) {\r\n        return null;\r\n    }\r\n    const handlesArray = Array.from(handles);\r\n    const nodeBounds = nodeElement.getBoundingClientRect();\r\n    const nodeOffset = {\r\n        x: nodeBounds.width * nodeOrigin[0],\r\n        y: nodeBounds.height * nodeOrigin[1],\r\n    };\r\n    return handlesArray.map((handle) => {\r\n        const handleBounds = handle.getBoundingClientRect();\r\n        return {\r\n            id: handle.getAttribute('data-handleid'),\r\n            position: handle.getAttribute('data-handlepos'),\r\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\r\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\r\n            ...getDimensions(handle),\r\n        };\r\n    });\r\n};\r\nfunction getMouseHandler(id, getState, handler) {\r\n    return handler === undefined\r\n        ? handler\r\n        : (event) => {\r\n            const node = getState().nodeInternals.get(id);\r\n            handler(event, { ...node });\r\n        };\r\n}\r\n// this handler is called by\r\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\r\n// or\r\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\r\nfunction handleNodeClick({ id, store, unselect = false, }) {\r\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals } = store.getState();\r\n    const node = nodeInternals.get(id);\r\n    store.setState({ nodesSelectionActive: false });\r\n    if (!node.selected) {\r\n        addSelectedNodes([id]);\r\n    }\r\n    else if (unselect || (node.selected && multiSelectionActive)) {\r\n        unselectNodesAndEdges({ nodes: [node] });\r\n    }\r\n}\n\nfunction useGetPointerPosition() {\r\n    const store = useStoreApi();\r\n    // returns the pointer position projected to the RF coordinate system\r\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\r\n        const { transform, snapGrid, snapToGrid } = store.getState();\r\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\r\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\r\n        const pointerPos = {\r\n            x: (x - transform[0]) / transform[2],\r\n            y: (y - transform[1]) / transform[2],\r\n        };\r\n        // we need the snapped position in order to be able to skip unnecessary drag events\r\n        return {\r\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\r\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\r\n            ...pointerPos,\r\n        };\r\n    }, []);\r\n    return getPointerPosition;\r\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\r\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\r\n}\r\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\r\n    const [dragging, setDragging] = useState(false);\r\n    const store = useStoreApi();\r\n    const dragItems = useRef();\r\n    const lastPos = useRef({ x: null, y: null });\r\n    const getPointerPosition = useGetPointerPosition();\r\n    useEffect(() => {\r\n        if (nodeRef?.current) {\r\n            const selection = select(nodeRef.current);\r\n            if (disabled) {\r\n                selection.on('.drag', null);\r\n            }\r\n            else {\r\n                const dragHandler = drag()\r\n                    .on('start', (event) => {\r\n                    const { nodeInternals, multiSelectionActive, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\r\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\r\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\r\n                        if (!nodeInternals.get(nodeId)?.selected) {\r\n                            // we need to reset selected nodes when selectNodesOnDrag=false\r\n                            unselectNodesAndEdges();\r\n                        }\r\n                    }\r\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\r\n                        handleNodeClick({\r\n                            id: nodeId,\r\n                            store,\r\n                        });\r\n                    }\r\n                    const pointerPos = getPointerPosition(event);\r\n                    lastPos.current = pointerPos;\r\n                    dragItems.current = getDragItems(nodeInternals, pointerPos, nodeId);\r\n                    if (onStart && dragItems.current) {\r\n                        const [currentNode, nodes] = getEventHandlerParams({\r\n                            nodeId,\r\n                            dragItems: dragItems.current,\r\n                            nodeInternals,\r\n                        });\r\n                        onStart(event.sourceEvent, currentNode, nodes);\r\n                    }\r\n                })\r\n                    .on('drag', (event) => {\r\n                    const { updateNodePositions, nodeInternals, nodeExtent, onNodeDrag, onSelectionDrag, snapGrid, snapToGrid, nodeOrigin, } = store.getState();\r\n                    const pointerPos = getPointerPosition(event);\r\n                    // skip events without movement\r\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\r\n                        dragItems.current) {\r\n                        lastPos.current = {\r\n                            x: pointerPos.xSnapped,\r\n                            y: pointerPos.ySnapped,\r\n                        };\r\n                        let hasChange = false;\r\n                        dragItems.current = dragItems.current.map((n) => {\r\n                            const nextPosition = { x: pointerPos.x - n.distance.x, y: pointerPos.y - n.distance.y };\r\n                            if (snapToGrid) {\r\n                                nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\r\n                                nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\r\n                            }\r\n                            const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin);\r\n                            // we want to make sure that we only fire a change event when there is a changes\r\n                            hasChange =\r\n                                hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\r\n                            n.position = updatedPos.position;\r\n                            n.positionAbsolute = updatedPos.positionAbsolute;\r\n                            return n;\r\n                        });\r\n                        if (!hasChange) {\r\n                            return;\r\n                        }\r\n                        const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\r\n                        updateNodePositions(dragItems.current, true, true);\r\n                        setDragging(true);\r\n                        if (onDrag) {\r\n                            const [currentNode, nodes] = getEventHandlerParams({\r\n                                nodeId,\r\n                                dragItems: dragItems.current,\r\n                                nodeInternals,\r\n                            });\r\n                            onDrag(event.sourceEvent, currentNode, nodes);\r\n                        }\r\n                    }\r\n                })\r\n                    .on('end', (event) => {\r\n                    setDragging(false);\r\n                    if (dragItems.current) {\r\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\r\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\r\n                        updateNodePositions(dragItems.current, false, false);\r\n                        if (onStop) {\r\n                            const [currentNode, nodes] = getEventHandlerParams({\r\n                                nodeId,\r\n                                dragItems: dragItems.current,\r\n                                nodeInternals,\r\n                            });\r\n                            onStop(event.sourceEvent, currentNode, nodes);\r\n                        }\r\n                    }\r\n                })\r\n                    .filter((event) => {\r\n                    const target = event.target;\r\n                    const isDraggable = !event.button &&\r\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\r\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\r\n                    return isDraggable;\r\n                });\r\n                selection.call(dragHandler);\r\n                return () => {\r\n                    selection.on('.drag', null);\r\n                };\r\n            }\r\n        }\r\n    }, [\r\n        nodeRef,\r\n        disabled,\r\n        noDragClassName,\r\n        handleSelector,\r\n        isSelectable,\r\n        store,\r\n        nodeId,\r\n        selectNodesOnDrag,\r\n        getPointerPosition,\r\n    ]);\r\n    return dragging;\r\n}\n\nfunction useUpdateNodePositions() {\r\n    const store = useStoreApi();\r\n    const updatePositions = useCallback((params) => {\r\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid } = store.getState();\r\n        const selectedNodes = getNodes().filter((n) => n.selected);\r\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\r\n        // if snap grid is enabled, we use that for the velocity.\r\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\r\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\r\n        const factor = params.isShiftPressed ? 4 : 1;\r\n        const positionDiffX = params.x * xVelo * factor;\r\n        const positionDiffY = params.y * yVelo * factor;\r\n        const nodeUpdates = selectedNodes.map((n) => {\r\n            if (n.positionAbsolute) {\r\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\r\n                if (snapToGrid) {\r\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\r\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\r\n                }\r\n                const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent);\r\n                n.position = updatedPos.position;\r\n                n.positionAbsolute = updatedPos.positionAbsolute;\r\n            }\r\n            return n;\r\n        });\r\n        updateNodePositions(nodeUpdates, true, false);\r\n    }, []);\r\n    return updatePositions;\r\n}\n\nconst arrowKeyDiffs = {\r\n    ArrowUp: { x: 0, y: -1 },\r\n    ArrowDown: { x: 0, y: 1 },\r\n    ArrowLeft: { x: -1, y: 0 },\r\n    ArrowRight: { x: 1, y: 0 },\r\n};\r\nvar wrapNode = (NodeComponent) => {\r\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\r\n        const store = useStoreApi();\r\n        const nodeRef = useRef(null);\r\n        const prevSourcePosition = useRef(sourcePosition);\r\n        const prevTargetPosition = useRef(targetPosition);\r\n        const prevType = useRef(type);\r\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\r\n        const updatePositions = useUpdateNodePositions();\r\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\r\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\r\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\r\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\r\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\r\n        const onSelectNodeHandler = (event) => {\r\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\r\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\r\n                handleNodeClick({\r\n                    id,\r\n                    store,\r\n                });\r\n            }\r\n            if (onClick) {\r\n                const node = store.getState().nodeInternals.get(id);\r\n                onClick(event, { ...node });\r\n            }\r\n        };\r\n        const onKeyDown = (event) => {\r\n            if (isInputDOMNode(event)) {\r\n                return;\r\n            }\r\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\r\n                const unselect = event.key === 'Escape';\r\n                if (unselect) {\r\n                    nodeRef.current?.blur();\r\n                }\r\n                handleNodeClick({\r\n                    id,\r\n                    store,\r\n                    unselect,\r\n                });\r\n            }\r\n            else if (!disableKeyboardA11y &&\r\n                isDraggable &&\r\n                selected &&\r\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\r\n                store.setState({\r\n                    ariaLiveMessage: `Moved selected node ${event.key\r\n                        .replace('Arrow', '')\r\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\r\n                });\r\n                updatePositions({\r\n                    x: arrowKeyDiffs[event.key].x,\r\n                    y: arrowKeyDiffs[event.key].y,\r\n                    isShiftPressed: event.shiftKey,\r\n                });\r\n            }\r\n        };\r\n        useEffect(() => {\r\n            if (nodeRef.current && !hidden) {\r\n                const currNode = nodeRef.current;\r\n                resizeObserver?.observe(currNode);\r\n                return () => resizeObserver?.unobserve(currNode);\r\n            }\r\n        }, [hidden]);\r\n        useEffect(() => {\r\n            // when the user programmatically changes the source or handle position, we re-initialize the node\r\n            const typeChanged = prevType.current !== type;\r\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\r\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\r\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\r\n                if (typeChanged) {\r\n                    prevType.current = type;\r\n                }\r\n                if (sourcePosChanged) {\r\n                    prevSourcePosition.current = sourcePosition;\r\n                }\r\n                if (targetPosChanged) {\r\n                    prevTargetPosition.current = targetPosition;\r\n                }\r\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\r\n            }\r\n        }, [id, type, sourcePosition, targetPosition]);\r\n        const dragging = useDrag({\r\n            nodeRef,\r\n            disabled: hidden || !isDraggable,\r\n            noDragClassName,\r\n            handleSelector: dragHandle,\r\n            nodeId: id,\r\n            isSelectable,\r\n            selectNodesOnDrag,\r\n        });\r\n        if (hidden) {\r\n            return null;\r\n        }\r\n        return (jsx(\"div\", { className: cc([\r\n                'react-flow__node',\r\n                `react-flow__node-${type}`,\r\n                {\r\n                    // this is overwritable by passing `nopan` as a class name\r\n                    [noPanClassName]: isDraggable,\r\n                },\r\n                className,\r\n                {\r\n                    selected,\r\n                    selectable: isSelectable,\r\n                    parent: isParent,\r\n                    dragging,\r\n                },\r\n            ]), ref: nodeRef, style: {\r\n                zIndex,\r\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\r\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\r\n                visibility: initialized ? 'visible' : 'hidden',\r\n                ...style,\r\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\r\n    };\r\n    NodeWrapper.displayName = 'NodeWrapper';\r\n    return memo(NodeWrapper);\r\n};\n\nfunction createNodeTypes(nodeTypes) {\r\n    const standardTypes = {\r\n        input: wrapNode((nodeTypes.input || InputNode$1)),\r\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\r\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\r\n        group: wrapNode((nodeTypes.group || GroupNode)),\r\n    };\r\n    const wrappedTypes = {};\r\n    const specialTypes = Object.keys(nodeTypes)\r\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\r\n        .reduce((res, key) => {\r\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\r\n        return res;\r\n    }, wrappedTypes);\r\n    return {\r\n        ...standardTypes,\r\n        ...specialTypes,\r\n    };\r\n}\r\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\r\n    if (!width || !height) {\r\n        return { x, y };\r\n    }\r\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\r\n        devWarn('nodeOrigin must be between 0 and 1');\r\n        return { x, y };\r\n    }\r\n    return {\r\n        x: x - width * origin[0],\r\n        y: y - height * origin[1],\r\n    };\r\n};\n\nconst doc = typeof document !== 'undefined' ? document : null;\r\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\r\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\r\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\r\n// user can use the single key 'a' or the combination 'd' + 's'\r\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n    // we need to remember the pressed keys in order to support combinations\r\n    const pressedKeys = useRef(new Set([]));\r\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\r\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\r\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\r\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\r\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\r\n    // we can't find it in the list of keysToWatch.\r\n    const [keyCodes, keysToWatch] = useMemo(() => {\r\n        if (keyCode !== null) {\r\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\r\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\r\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\r\n            return [keys, keysFlat];\r\n        }\r\n        return [[], []];\r\n    }, [keyCode]);\r\n    useEffect(() => {\r\n        if (keyCode !== null) {\r\n            const downHandler = (event) => {\r\n                if (isInputDOMNode(event)) {\r\n                    return false;\r\n                }\r\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\r\n                pressedKeys.current.add(event[keyOrCode]);\r\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\r\n                    event.preventDefault();\r\n                    setKeyPressed(true);\r\n                }\r\n            };\r\n            const upHandler = (event) => {\r\n                if (isInputDOMNode(event)) {\r\n                    return false;\r\n                }\r\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\r\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\r\n                    setKeyPressed(false);\r\n                    pressedKeys.current.clear();\r\n                }\r\n                else {\r\n                    pressedKeys.current.delete(event[keyOrCode]);\r\n                }\r\n            };\r\n            const resetHandler = () => {\r\n                pressedKeys.current.clear();\r\n                setKeyPressed(false);\r\n            };\r\n            options?.target?.addEventListener('keydown', downHandler);\r\n            options?.target?.addEventListener('keyup', upHandler);\r\n            window.addEventListener('blur', resetHandler);\r\n            return () => {\r\n                options?.target?.removeEventListener('keydown', downHandler);\r\n                options?.target?.removeEventListener('keyup', upHandler);\r\n                window.removeEventListener('blur', resetHandler);\r\n            };\r\n        }\r\n    }, [keyCode, setKeyPressed]);\r\n    return keyPressed;\r\n};\r\n// utils\r\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\r\n    return (keyCodes\r\n        // we only want to compare same sizes of keyCode definitions\r\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\r\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\r\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\r\n        // since we want to support multiple possibilities only one of the\r\n        // combinations need to be part of the pressed keys\r\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\r\n}\r\nfunction useKeyOrCode(eventCode, keysToWatch) {\r\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\r\n}\n\nfunction calculateXYZPosition(node, nodeInternals, parentNodes, result, nodeOrigin) {\r\n    if (!node.parentNode) {\r\n        return result;\r\n    }\r\n    const parentNode = nodeInternals.get(node.parentNode);\r\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\r\n    return calculateXYZPosition(parentNode, nodeInternals, parentNodes, {\r\n        x: (result.x ?? 0) + parentNodePosition.x,\r\n        y: (result.y ?? 0) + parentNodePosition.y,\r\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\r\n    }, nodeOrigin);\r\n}\r\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\r\n    const nextNodeInternals = new Map();\r\n    const parentNodes = {};\r\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\r\n    nodes.forEach((node) => {\r\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\r\n        const currInternals = nodeInternals.get(node.id);\r\n        const internals = {\r\n            width: currInternals?.width,\r\n            height: currInternals?.height,\r\n            ...node,\r\n            positionAbsolute: {\r\n                x: node.position.x,\r\n                y: node.position.y,\r\n            },\r\n        };\r\n        if (node.parentNode) {\r\n            internals.parentNode = node.parentNode;\r\n            parentNodes[node.parentNode] = true;\r\n        }\r\n        Object.defineProperty(internals, internalsSymbol, {\r\n            enumerable: false,\r\n            value: {\r\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\r\n                z,\r\n            },\r\n        });\r\n        nextNodeInternals.set(node.id, internals);\r\n    });\r\n    nextNodeInternals.forEach((node) => {\r\n        if (node.parentNode && !nextNodeInternals.has(node.parentNode)) {\r\n            throw new Error(`Parent node ${node.parentNode} not found`);\r\n        }\r\n        if (node.parentNode || parentNodes[node.id]) {\r\n            const { x, y, z } = calculateXYZPosition(node, nextNodeInternals, parentNodes, {\r\n                ...node.position,\r\n                z: node[internalsSymbol]?.z ?? 0,\r\n            }, nodeOrigin);\r\n            node.positionAbsolute = {\r\n                x,\r\n                y,\r\n            };\r\n            node[internalsSymbol].z = z;\r\n            if (parentNodes[node.id]) {\r\n                node[internalsSymbol].isParent = true;\r\n            }\r\n        }\r\n    });\r\n    return nextNodeInternals;\r\n}\r\nfunction fitView(get, options = {}) {\r\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\r\n    if ((options.initial && !fitViewOnInitDone && fitViewOnInit) || !options.initial) {\r\n        if (d3Zoom && d3Selection) {\r\n            const nodes = getNodes().filter((n) => (options.includeHiddenNodes ? n.width && n.height : !n.hidden));\r\n            const nodesInitialized = nodes.every((n) => n.width && n.height);\r\n            if (nodes.length > 0 && nodesInitialized) {\r\n                const bounds = getRectOfNodes(nodes, nodeOrigin);\r\n                const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\r\n                const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\r\n                if (typeof options.duration === 'number' && options.duration > 0) {\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\r\n                }\r\n                else {\r\n                    d3Zoom.transform(d3Selection, nextTransform);\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\r\n    nodeChanges.forEach((change) => {\r\n        const node = nodeInternals.get(change.id);\r\n        if (node) {\r\n            nodeInternals.set(node.id, {\r\n                ...node,\r\n                [internalsSymbol]: node[internalsSymbol],\r\n                selected: change.selected,\r\n            });\r\n        }\r\n    });\r\n    return new Map(nodeInternals);\r\n}\r\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\r\n    return edges.map((e) => {\r\n        const change = edgeChanges.find((change) => change.id === e.id);\r\n        if (change) {\r\n            e.selected = change.selected;\r\n        }\r\n        return e;\r\n    });\r\n}\r\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\r\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\r\n    if (changedNodes?.length) {\r\n        if (hasDefaultNodes) {\r\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\r\n        }\r\n        onNodesChange?.(changedNodes);\r\n    }\r\n    if (changedEdges?.length) {\r\n        if (hasDefaultEdges) {\r\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\r\n        }\r\n        onEdgesChange?.(changedEdges);\r\n    }\r\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst noop = () => { };\r\nconst initialViewportHelper = {\r\n    zoomIn: noop,\r\n    zoomOut: noop,\r\n    zoomTo: noop,\r\n    getZoom: () => 1,\r\n    setViewport: noop,\r\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\r\n    fitView: noop,\r\n    setCenter: noop,\r\n    fitBounds: noop,\r\n    project: (position) => position,\r\n    viewportInitialized: false,\r\n};\r\nconst selector$a = (s) => ({\r\n    d3Zoom: s.d3Zoom,\r\n    d3Selection: s.d3Selection,\r\n});\r\nconst useViewportHelper = () => {\r\n    const store = useStoreApi();\r\n    const { d3Zoom, d3Selection } = useStore(selector$a, shallow);\r\n    const viewportHelperFunctions = useMemo(() => {\r\n        if (d3Selection && d3Zoom) {\r\n            return {\r\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\r\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\r\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\r\n                getZoom: () => store.getState().transform[2],\r\n                setViewport: (transform, options) => {\r\n                    const [x, y, zoom] = store.getState().transform;\r\n                    const nextTransform = zoomIdentity\r\n                        .translate(transform.x ?? x, transform.y ?? y)\r\n                        .scale(transform.zoom ?? zoom);\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\r\n                },\r\n                getViewport: () => {\r\n                    const [x, y, zoom] = store.getState().transform;\r\n                    return { x, y, zoom };\r\n                },\r\n                fitView: (options) => fitView(store.getState, options),\r\n                setCenter: (x, y, options) => {\r\n                    const { width, height, maxZoom } = store.getState();\r\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\r\n                    const centerX = width / 2 - x * nextZoom;\r\n                    const centerY = height / 2 - y * nextZoom;\r\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\r\n                },\r\n                fitBounds: (bounds, options) => {\r\n                    const { width, height, minZoom, maxZoom } = store.getState();\r\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\r\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\r\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\r\n                },\r\n                project: (position) => {\r\n                    const { transform, snapToGrid, snapGrid } = store.getState();\r\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\r\n                },\r\n                viewportInitialized: true,\r\n            };\r\n        }\r\n        return initialViewportHelper;\r\n    }, [d3Zoom, d3Selection]);\r\n    return viewportHelperFunctions;\r\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\r\nfunction useReactFlow() {\r\n    const viewportHelper = useViewportHelper();\r\n    const store = useStoreApi();\r\n    const getNodes = useCallback(() => {\r\n        return store\r\n            .getState()\r\n            .getNodes()\r\n            .map((n) => ({ ...n }));\r\n    }, []);\r\n    const getNode = useCallback((id) => {\r\n        return store.getState().nodeInternals.get(id);\r\n    }, []);\r\n    const getEdges = useCallback(() => {\r\n        const { edges = [] } = store.getState();\r\n        return edges.map((e) => ({ ...e }));\r\n    }, []);\r\n    const getEdge = useCallback((id) => {\r\n        const { edges = [] } = store.getState();\r\n        return edges.find((e) => e.id === id);\r\n    }, []);\r\n    const setNodes = useCallback((payload) => {\r\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\r\n        const nodes = getNodes();\r\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\r\n        if (hasDefaultNodes) {\r\n            setNodes(nextNodes);\r\n        }\r\n        else if (onNodesChange) {\r\n            const changes = nextNodes.length === 0\r\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\r\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\r\n            onNodesChange(changes);\r\n        }\r\n    }, []);\r\n    const setEdges = useCallback((payload) => {\r\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\r\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\r\n        if (hasDefaultEdges) {\r\n            setEdges(nextEdges);\r\n        }\r\n        else if (onEdgesChange) {\r\n            const changes = nextEdges.length === 0\r\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\r\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\r\n            onEdgesChange(changes);\r\n        }\r\n    }, []);\r\n    const addNodes = useCallback((payload) => {\r\n        const nodes = Array.isArray(payload) ? payload : [payload];\r\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\r\n        if (hasDefaultNodes) {\r\n            const currentNodes = getNodes();\r\n            const nextNodes = [...currentNodes, ...nodes];\r\n            setNodes(nextNodes);\r\n        }\r\n        else if (onNodesChange) {\r\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\r\n            onNodesChange(changes);\r\n        }\r\n    }, []);\r\n    const addEdges = useCallback((payload) => {\r\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\r\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\r\n        if (hasDefaultEdges) {\r\n            setEdges([...edges, ...nextEdges]);\r\n        }\r\n        else if (onEdgesChange) {\r\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\r\n            onEdgesChange(changes);\r\n        }\r\n    }, []);\r\n    const toObject = useCallback(() => {\r\n        const { getNodes, edges = [], transform } = store.getState();\r\n        const [x, y, zoom] = transform;\r\n        return {\r\n            nodes: getNodes().map((n) => ({ ...n })),\r\n            edges: edges.map((e) => ({ ...e })),\r\n            viewport: {\r\n                x,\r\n                y,\r\n                zoom,\r\n            },\r\n        };\r\n    }, []);\r\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\r\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\r\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\r\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\r\n        const nodesToRemove = getNodes().reduce((res, node) => {\r\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\r\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\r\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\r\n                res.push(node);\r\n            }\r\n            return res;\r\n        }, []);\r\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\r\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\r\n        if (nodesToRemove || initialHitEdges) {\r\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\r\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\r\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\r\n                if (!res.includes(edge.id)) {\r\n                    res.push(edge.id);\r\n                }\r\n                return res;\r\n            }, []);\r\n            if (hasDefaultEdges || hasDefaultNodes) {\r\n                if (hasDefaultEdges) {\r\n                    store.setState({\r\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\r\n                    });\r\n                }\r\n                if (hasDefaultNodes) {\r\n                    nodesToRemove.forEach((node) => {\r\n                        nodeInternals.delete(node.id);\r\n                    });\r\n                    store.setState({\r\n                        nodeInternals: new Map(nodeInternals),\r\n                    });\r\n                }\r\n            }\r\n            if (edgeIdsToRemove.length > 0) {\r\n                onEdgesDelete?.(edgesToRemove);\r\n                if (onEdgesChange) {\r\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\r\n                        id,\r\n                        type: 'remove',\r\n                    })));\r\n                }\r\n            }\r\n            if (nodesToRemove.length > 0) {\r\n                onNodesDelete?.(nodesToRemove);\r\n                if (onNodesChange) {\r\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\r\n                    onNodesChange(nodeChanges);\r\n                }\r\n            }\r\n        }\r\n    }, []);\r\n    const getNodeRect = useCallback((nodeOrRect) => {\r\n        const isRect = isRectObject(nodeOrRect);\r\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\r\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\r\n        return [nodeRect, node, isRect];\r\n    }, []);\r\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\r\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\r\n        if (!nodeRect) {\r\n            return [];\r\n        }\r\n        return (nodes || store.getState().getNodes()).filter((n) => {\r\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\r\n                return false;\r\n            }\r\n            const currNodeRect = nodeToRect(n);\r\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\r\n            const partiallyVisible = partially && overlappingArea > 0;\r\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\r\n        });\r\n    }, []);\r\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\r\n        const [nodeRect] = getNodeRect(nodeOrRect);\r\n        if (!nodeRect) {\r\n            return false;\r\n        }\r\n        const overlappingArea = getOverlappingArea(nodeRect, area);\r\n        const partiallyVisible = partially && overlappingArea > 0;\r\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\r\n    }, []);\r\n    return useMemo(() => {\r\n        return {\r\n            ...viewportHelper,\r\n            getNodes,\r\n            getNode,\r\n            getEdges,\r\n            getEdge,\r\n            setNodes,\r\n            setEdges,\r\n            addNodes,\r\n            addEdges,\r\n            toObject,\r\n            deleteElements,\r\n            getIntersectingNodes,\r\n            isNodeIntersecting,\r\n        };\r\n    }, [\r\n        viewportHelper,\r\n        getNodes,\r\n        getNode,\r\n        getEdges,\r\n        getEdge,\r\n        setNodes,\r\n        setEdges,\r\n        addNodes,\r\n        addEdges,\r\n        toObject,\r\n        deleteElements,\r\n        getIntersectingNodes,\r\n        isNodeIntersecting,\r\n    ]);\r\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\r\n    const store = useStoreApi();\r\n    const { deleteElements } = useReactFlow();\r\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\r\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\r\n    useEffect(() => {\r\n        if (deleteKeyPressed) {\r\n            const { edges, getNodes } = store.getState();\r\n            const selectedNodes = getNodes().filter((node) => node.selected);\r\n            const selectedEdges = edges.filter((edge) => edge.selected);\r\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\r\n            store.setState({ nodesSelectionActive: false });\r\n        }\r\n    }, [deleteKeyPressed]);\r\n    useEffect(() => {\r\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\r\n    }, [multiSelectionKeyPressed]);\r\n};\n\nfunction useResizeHandler(rendererNode) {\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        let resizeObserver;\r\n        const updateDimensions = () => {\r\n            if (!rendererNode.current) {\r\n                return;\r\n            }\r\n            const size = getDimensions(rendererNode.current);\r\n            if (size.height === 0 || size.width === 0) {\r\n                devWarn('The React Flow parent container needs a width and a height to render the graph. Help: https://reactflow.dev/error#400');\r\n            }\r\n            store.setState({ width: size.width || 500, height: size.height || 500 });\r\n        };\r\n        updateDimensions();\r\n        window.addEventListener('resize', updateDimensions);\r\n        if (rendererNode.current) {\r\n            resizeObserver = new ResizeObserver(() => updateDimensions());\r\n            resizeObserver.observe(rendererNode.current);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('resize', updateDimensions);\r\n            if (resizeObserver && rendererNode.current) {\r\n                resizeObserver.unobserve(rendererNode.current);\r\n            }\r\n        };\r\n    }, []);\r\n}\n\nconst containerStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n};\n\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\r\nconst eventToFlowTransform = (eventViewport) => ({\r\n    x: eventViewport.x,\r\n    y: eventViewport.y,\r\n    zoom: eventViewport.k,\r\n});\r\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\r\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\r\nconst selector$9 = (s) => ({\r\n    d3Zoom: s.d3Zoom,\r\n    d3Selection: s.d3Selection,\r\n    d3ZoomHandler: s.d3ZoomHandler,\r\n    userSelectionActive: s.userSelectionActive,\r\n});\r\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\r\n    const timerId = useRef();\r\n    const store = useStoreApi();\r\n    const isZoomingOrPanning = useRef(false);\r\n    const zoomedWithRightMouseButton = useRef(false);\r\n    const zoomPane = useRef(null);\r\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\r\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$9, shallow);\r\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\r\n    useResizeHandler(zoomPane);\r\n    useEffect(() => {\r\n        if (zoomPane.current) {\r\n            const bbox = zoomPane.current.getBoundingClientRect();\r\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\r\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\r\n            const updatedTransform = zoomIdentity\r\n                .translate(defaultViewport.x, defaultViewport.y)\r\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\r\n            const extent = [\r\n                [0, 0],\r\n                [bbox.width, bbox.height],\r\n            ];\r\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\r\n            d3ZoomInstance.transform(selection, constrainedTransform);\r\n            store.setState({\r\n                d3Zoom: d3ZoomInstance,\r\n                d3Selection: selection,\r\n                d3ZoomHandler: selection.on('wheel.zoom'),\r\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\r\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\r\n                domNode: zoomPane.current.closest('.react-flow'),\r\n            });\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (d3Selection && d3Zoom) {\r\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\r\n                d3Selection.on('wheel.zoom', (event) => {\r\n                    if (isWrappedWithClass(event, noWheelClassName)) {\r\n                        return false;\r\n                    }\r\n                    event.preventDefault();\r\n                    event.stopImmediatePropagation();\r\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\r\n                    if (event.ctrlKey && zoomOnPinch) {\r\n                        const point = pointer(event);\r\n                        // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\r\n                        const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\r\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\r\n                        d3Zoom.scaleTo(d3Selection, zoom, point);\r\n                        return;\r\n                    }\r\n                    // increase scroll speed in firefox\r\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\r\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\r\n                    const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\r\n                    const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\r\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\r\n                });\r\n            }\r\n            else if (typeof d3ZoomHandler !== 'undefined') {\r\n                d3Selection.on('wheel.zoom', function (event, d) {\r\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\r\n                        return null;\r\n                    }\r\n                    event.preventDefault();\r\n                    d3ZoomHandler.call(this, event, d);\r\n                });\r\n            }\r\n        }\r\n    }, [\r\n        userSelectionActive,\r\n        panOnScroll,\r\n        panOnScrollMode,\r\n        d3Selection,\r\n        d3Zoom,\r\n        d3ZoomHandler,\r\n        zoomActivationKeyPressed,\r\n        zoomOnPinch,\r\n        preventScrolling,\r\n        noWheelClassName,\r\n    ]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            if (userSelectionActive && !isZoomingOrPanning.current) {\r\n                d3Zoom.on('zoom', null);\r\n            }\r\n            else if (!userSelectionActive) {\r\n                d3Zoom.on('zoom', (event) => {\r\n                    const { onViewportChange } = store.getState();\r\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\r\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, event.sourceEvent?.button));\r\n                    if (onMove || onViewportChange) {\r\n                        const flowTransform = eventToFlowTransform(event.transform);\r\n                        onViewportChange?.(flowTransform);\r\n                        onMove?.(event.sourceEvent, flowTransform);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            d3Zoom.on('start', (event) => {\r\n                if (!event.sourceEvent) {\r\n                    return null;\r\n                }\r\n                const { onViewportChangeStart } = store.getState();\r\n                isZoomingOrPanning.current = true;\r\n                if (event.sourceEvent?.type === 'mousedown') {\r\n                    store.setState({ paneDragging: true });\r\n                }\r\n                if (onMoveStart || onViewportChangeStart) {\r\n                    const flowTransform = eventToFlowTransform(event.transform);\r\n                    prevTransform.current = flowTransform;\r\n                    onViewportChangeStart?.(flowTransform);\r\n                    onMoveStart?.(event.sourceEvent, flowTransform);\r\n                }\r\n            });\r\n        }\r\n    }, [d3Zoom, onMoveStart]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            d3Zoom.on('end', (event) => {\r\n                if (!event.sourceEvent) {\r\n                    return null;\r\n                }\r\n                const { onViewportChangeEnd } = store.getState();\r\n                isZoomingOrPanning.current = false;\r\n                store.setState({ paneDragging: false });\r\n                if (onPaneContextMenu &&\r\n                    isRightClickPan(panOnDrag, event.sourceEvent?.button) &&\r\n                    !zoomedWithRightMouseButton.current) {\r\n                    onPaneContextMenu(event.sourceEvent);\r\n                }\r\n                zoomedWithRightMouseButton.current = false;\r\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\r\n                    const flowTransform = eventToFlowTransform(event.transform);\r\n                    prevTransform.current = flowTransform;\r\n                    clearTimeout(timerId.current);\r\n                    timerId.current = setTimeout(() => {\r\n                        onViewportChangeEnd?.(flowTransform);\r\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\r\n                    }, panOnScroll ? 150 : 0);\r\n                }\r\n            });\r\n        }\r\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\r\n    useEffect(() => {\r\n        if (d3Zoom) {\r\n            d3Zoom.filter((event) => {\r\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\r\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\r\n                if (event.button === 1 &&\r\n                    event.type === 'mousedown' &&\r\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\r\n                    return true;\r\n                }\r\n                // if all interactions are disabled, we prevent all zoom events\r\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\r\n                    return false;\r\n                }\r\n                // during a selection we prevent all other interactions\r\n                if (userSelectionActive) {\r\n                    return false;\r\n                }\r\n                // if zoom on double click is disabled, we prevent the double click event\r\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\r\n                    return false;\r\n                }\r\n                // if the target element is inside an element with the nowheel class, we prevent zooming\r\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\r\n                    return false;\r\n                }\r\n                // if the target element is inside an element with the nopan class, we prevent panning\r\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\r\n                    return false;\r\n                }\r\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\r\n                    return false;\r\n                }\r\n                // when there is no scroll handling enabled, we prevent all wheel events\r\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\r\n                    return false;\r\n                }\r\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\r\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\r\n                    return false;\r\n                }\r\n                // if the pane is only movable using allowed clicks\r\n                if (Array.isArray(panOnDrag) &&\r\n                    !panOnDrag.includes(event.button) &&\r\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\r\n                    return false;\r\n                }\r\n                // We only allow right clicks if pan on drag is set to right click\r\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\r\n                // default filter for d3-zoom\r\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\r\n            });\r\n        }\r\n    }, [\r\n        userSelectionActive,\r\n        d3Zoom,\r\n        zoomOnScroll,\r\n        zoomOnPinch,\r\n        panOnScroll,\r\n        zoomOnDoubleClick,\r\n        panOnDrag,\r\n        elementsSelectable,\r\n        zoomActivationKeyPressed,\r\n    ]);\r\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\r\n};\n\nconst selector$8 = (s) => ({\r\n    userSelectionActive: s.userSelectionActive,\r\n    userSelectionRect: s.userSelectionRect,\r\n});\r\nfunction UserSelection() {\r\n    const { userSelectionActive, userSelectionRect } = useStore(selector$8, shallow);\r\n    const showSelectionBox = userSelectionActive && userSelectionRect;\r\n    if (!showSelectionBox) {\r\n        return null;\r\n    }\r\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\r\n            width: userSelectionRect.width,\r\n            height: userSelectionRect.height,\r\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\r\n        } }));\r\n}\n\nfunction handleParentExpand(res, updateItem) {\r\n    const parent = res.find((e) => e.id === updateItem.parentNode);\r\n    if (parent) {\r\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\r\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\r\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\r\n            parent.style = { ...parent.style } || {};\r\n            parent.style.width = parent.style.width ?? parent.width;\r\n            parent.style.height = parent.style.height ?? parent.height;\r\n            if (extendWidth > 0) {\r\n                parent.style.width += extendWidth;\r\n            }\r\n            if (extendHeight > 0) {\r\n                parent.style.height += extendHeight;\r\n            }\r\n            if (updateItem.position.x < 0) {\r\n                const xDiff = Math.abs(updateItem.position.x);\r\n                parent.position.x = parent.position.x - xDiff;\r\n                parent.style.width += xDiff;\r\n                updateItem.position.x = 0;\r\n            }\r\n            if (updateItem.position.y < 0) {\r\n                const yDiff = Math.abs(updateItem.position.y);\r\n                parent.position.y = parent.position.y - yDiff;\r\n                parent.style.height += yDiff;\r\n                updateItem.position.y = 0;\r\n            }\r\n            parent.width = parent.style.width;\r\n            parent.height = parent.style.height;\r\n        }\r\n    }\r\n}\r\nfunction applyChanges(changes, elements) {\r\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\r\n    if (changes.some((c) => c.type === 'reset')) {\r\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\r\n    }\r\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\r\n    return elements.reduce((res, item) => {\r\n        const currentChanges = changes.filter((c) => c.id === item.id);\r\n        if (currentChanges.length === 0) {\r\n            res.push(item);\r\n            return res;\r\n        }\r\n        const updateItem = { ...item };\r\n        for (const currentChange of currentChanges) {\r\n            if (currentChange) {\r\n                switch (currentChange.type) {\r\n                    case 'select': {\r\n                        updateItem.selected = currentChange.selected;\r\n                        break;\r\n                    }\r\n                    case 'position': {\r\n                        if (typeof currentChange.position !== 'undefined') {\r\n                            updateItem.position = currentChange.position;\r\n                        }\r\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\r\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\r\n                        }\r\n                        if (typeof currentChange.dragging !== 'undefined') {\r\n                            updateItem.dragging = currentChange.dragging;\r\n                        }\r\n                        if (updateItem.expandParent) {\r\n                            handleParentExpand(res, updateItem);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'dimensions': {\r\n                        if (typeof currentChange.dimensions !== 'undefined') {\r\n                            updateItem.width = currentChange.dimensions.width;\r\n                            updateItem.height = currentChange.dimensions.height;\r\n                        }\r\n                        if (typeof currentChange.updateStyle !== 'undefined') {\r\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\r\n                        }\r\n                        if (typeof currentChange.resizing === 'boolean') {\r\n                            updateItem.resizing = currentChange.resizing;\r\n                        }\r\n                        if (updateItem.expandParent) {\r\n                            handleParentExpand(res, updateItem);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'remove': {\r\n                        return res;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        res.push(updateItem);\r\n        return res;\r\n    }, initElements);\r\n}\r\nfunction applyNodeChanges(changes, nodes) {\r\n    return applyChanges(changes, nodes);\r\n}\r\nfunction applyEdgeChanges(changes, edges) {\r\n    return applyChanges(changes, edges);\r\n}\r\nconst createSelectionChange = (id, selected) => ({\r\n    id,\r\n    type: 'select',\r\n    selected,\r\n});\r\nfunction getSelectionChanges(items, selectedIds) {\r\n    return items.reduce((res, item) => {\r\n        const willBeSelected = selectedIds.includes(item.id);\r\n        if (!item.selected && willBeSelected) {\r\n            item.selected = true;\r\n            res.push(createSelectionChange(item.id, true));\r\n        }\r\n        else if (item.selected && !willBeSelected) {\r\n            item.selected = false;\r\n            res.push(createSelectionChange(item.id, false));\r\n        }\r\n        return res;\r\n    }, []);\r\n}\n\nfunction getMousePosition(event, containerBounds) {\r\n    return {\r\n        x: event.clientX - containerBounds.left,\r\n        y: event.clientY - containerBounds.top,\r\n    };\r\n}\r\nconst wrapHandler = (handler, containerRef) => {\r\n    return (event) => {\r\n        if (event.target !== containerRef.current) {\r\n            return;\r\n        }\r\n        handler?.(event);\r\n    };\r\n};\r\nconst selector$7 = (s) => ({\r\n    userSelectionActive: s.userSelectionActive,\r\n    elementsSelectable: s.elementsSelectable,\r\n    dragging: s.paneDragging,\r\n});\r\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\r\n    const container = useRef(null);\r\n    const store = useStoreApi();\r\n    const prevSelectedNodesCount = useRef(0);\r\n    const prevSelectedEdgesCount = useRef(0);\r\n    const containerBounds = useRef();\r\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$7, shallow);\r\n    const resetUserSelection = () => {\r\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\r\n        prevSelectedNodesCount.current = 0;\r\n        prevSelectedEdgesCount.current = 0;\r\n    };\r\n    const onClick = (event) => {\r\n        onPaneClick?.(event);\r\n        store.getState().resetSelectedElements();\r\n        store.setState({ nodesSelectionActive: false });\r\n    };\r\n    const onContextMenu = (event) => {\r\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        onPaneContextMenu?.(event);\r\n    };\r\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\r\n    const onMouseDown = (event) => {\r\n        const { resetSelectedElements, domNode } = store.getState();\r\n        containerBounds.current = domNode?.getBoundingClientRect();\r\n        if (!elementsSelectable ||\r\n            !isSelecting ||\r\n            event.button !== 0 ||\r\n            event.target !== container.current ||\r\n            !containerBounds.current) {\r\n            return;\r\n        }\r\n        const { x, y } = getMousePosition(event, containerBounds.current);\r\n        resetSelectedElements();\r\n        store.setState({\r\n            userSelectionRect: {\r\n                width: 0,\r\n                height: 0,\r\n                startX: x,\r\n                startY: y,\r\n                x,\r\n                y,\r\n            },\r\n        });\r\n        onSelectionStart?.(event);\r\n    };\r\n    const onMouseMove = (event) => {\r\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\r\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\r\n            return;\r\n        }\r\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\r\n        const mousePos = getMousePosition(event, containerBounds.current);\r\n        const startX = userSelectionRect.startX ?? 0;\r\n        const startY = userSelectionRect.startY ?? 0;\r\n        const nextUserSelectRect = {\r\n            ...userSelectionRect,\r\n            x: mousePos.x < startX ? mousePos.x : startX,\r\n            y: mousePos.y < startY ? mousePos.y : startY,\r\n            width: Math.abs(mousePos.x - startX),\r\n            height: Math.abs(mousePos.y - startY),\r\n        };\r\n        const nodes = getNodes();\r\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\r\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\r\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\r\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\r\n            prevSelectedNodesCount.current = selectedNodeIds.length;\r\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\r\n            if (changes.length) {\r\n                onNodesChange?.(changes);\r\n            }\r\n        }\r\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\r\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\r\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\r\n            if (changes.length) {\r\n                onEdgesChange?.(changes);\r\n            }\r\n        }\r\n        store.setState({\r\n            userSelectionRect: nextUserSelectRect,\r\n        });\r\n    };\r\n    const onMouseUp = (event) => {\r\n        const { userSelectionRect } = store.getState();\r\n        // We only want to trigger click functions when in selection mode if\r\n        // the user did not move the mouse.\r\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\r\n            onClick?.(event);\r\n        }\r\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\r\n        resetUserSelection();\r\n        onSelectionEnd?.(event);\r\n    };\r\n    const onMouseLeave = (event) => {\r\n        if (userSelectionActive) {\r\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\r\n            onSelectionEnd?.(event);\r\n        }\r\n        resetUserSelection();\r\n    };\r\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\r\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\r\n});\r\nPane.displayName = 'Pane';\n\nconst selector$6 = (s) => ({\r\n    transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\r\n    userSelectionActive: s.userSelectionActive,\r\n});\r\nconst bboxSelector = (s) => {\r\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\r\n    return getRectOfNodes(selectedNodes, s.nodeOrigin);\r\n};\r\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\r\n    const store = useStoreApi();\r\n    const { transformString, userSelectionActive } = useStore(selector$6, shallow);\r\n    const { width, height, x: left, y: top } = useStore(bboxSelector, shallow);\r\n    const updatePositions = useUpdateNodePositions();\r\n    const nodeRef = useRef(null);\r\n    useEffect(() => {\r\n        if (!disableKeyboardA11y) {\r\n            nodeRef.current?.focus({\r\n                preventScroll: true,\r\n            });\r\n        }\r\n    }, [disableKeyboardA11y]);\r\n    useDrag({\r\n        nodeRef,\r\n    });\r\n    if (userSelectionActive || !width || !height) {\r\n        return null;\r\n    }\r\n    const onContextMenu = onSelectionContextMenu\r\n        ? (event) => {\r\n            const selectedNodes = store\r\n                .getState()\r\n                .getNodes()\r\n                .filter((n) => n.selected);\r\n            onSelectionContextMenu(event, selectedNodes);\r\n        }\r\n        : undefined;\r\n    const onKeyDown = (event) => {\r\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\r\n            updatePositions({\r\n                x: arrowKeyDiffs[event.key].x,\r\n                y: arrowKeyDiffs[event.key].y,\r\n                isShiftPressed: event.shiftKey,\r\n            });\r\n        }\r\n    };\r\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\r\n            transform: transformString,\r\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\r\n                width,\r\n                height,\r\n                top,\r\n                left,\r\n            } }) }));\r\n}\r\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$5 = (s) => s.nodesSelectionActive;\r\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\r\n    const nodesSelectionActive = useStore(selector$5);\r\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\r\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\r\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\r\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\r\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\r\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\r\n};\r\nFlowRenderer.displayName = 'FlowRenderer';\r\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\r\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\r\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\r\n        : s.getNodes(), [onlyRenderVisible]));\r\n    return nodes;\r\n}\n\nconst selector$4 = (s) => ({\r\n    nodesDraggable: s.nodesDraggable,\r\n    nodesConnectable: s.nodesConnectable,\r\n    nodesFocusable: s.nodesFocusable,\r\n    elementsSelectable: s.elementsSelectable,\r\n    updateNodeDimensions: s.updateNodeDimensions,\r\n});\r\nconst NodeRenderer = (props) => {\r\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions } = useStore(selector$4, shallow);\r\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\r\n    const resizeObserverRef = useRef();\r\n    const resizeObserver = useMemo(() => {\r\n        if (typeof ResizeObserver === 'undefined') {\r\n            return null;\r\n        }\r\n        const observer = new ResizeObserver((entries) => {\r\n            const updates = entries.map((entry) => ({\r\n                id: entry.target.getAttribute('data-id'),\r\n                nodeElement: entry.target,\r\n                forceUpdate: true,\r\n            }));\r\n            updateNodeDimensions(updates);\r\n        });\r\n        resizeObserverRef.current = observer;\r\n        return observer;\r\n    }, []);\r\n    useEffect(() => {\r\n        return () => {\r\n            resizeObserverRef?.current?.disconnect();\r\n        };\r\n    }, []);\r\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\r\n            let nodeType = node.type || 'default';\r\n            if (!props.nodeTypes[nodeType]) {\r\n                devWarn(`Node type \"${nodeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\r\n                nodeType = 'default';\r\n            }\r\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\r\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\r\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\r\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\r\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\r\n            const clampedPosition = props.nodeExtent\r\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\r\n                : node.positionAbsolute;\r\n            const posX = clampedPosition?.x ?? 0;\r\n            const posY = clampedPosition?.y ?? 0;\r\n            const posOrigin = getPositionWithOrigin({\r\n                x: posX,\r\n                y: posY,\r\n                width: node.width ?? 0,\r\n                height: node.height ?? 0,\r\n                origin: props.nodeOrigin,\r\n            });\r\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\r\n        }) }));\r\n};\r\nNodeRenderer.displayName = 'NodeRenderer';\r\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\r\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\r\n    let maxLevel = -1;\r\n    const levelLookup = edges.reduce((tree, edge) => {\r\n        const hasZIndex = isNumeric(edge.zIndex);\r\n        let z = hasZIndex ? edge.zIndex : 0;\r\n        if (elevateEdgesOnSelect) {\r\n            z = hasZIndex\r\n                ? edge.zIndex\r\n                : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\r\n        }\r\n        if (tree[z]) {\r\n            tree[z].push(edge);\r\n        }\r\n        else {\r\n            tree[z] = [edge];\r\n        }\r\n        maxLevel = z > maxLevel ? z : maxLevel;\r\n        return tree;\r\n    }, {});\r\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\r\n        const level = +key;\r\n        return {\r\n            edges,\r\n            level,\r\n            isMaxLevel: level === maxLevel,\r\n        };\r\n    });\r\n    if (edgeTree.length === 0) {\r\n        return defaultEdgeTree;\r\n    }\r\n    return edgeTree;\r\n}\r\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\r\n    const edges = useStore(useCallback((s) => {\r\n        if (!onlyRenderVisible) {\r\n            return s.edges;\r\n        }\r\n        return s.edges.filter((e) => {\r\n            const sourceNode = nodeInternals.get(e.source);\r\n            const targetNode = nodeInternals.get(e.target);\r\n            return (sourceNode?.width &&\r\n                sourceNode?.height &&\r\n                targetNode?.width &&\r\n                targetNode?.height &&\r\n                isEdgeVisible({\r\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\r\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\r\n                    sourceWidth: sourceNode.width,\r\n                    sourceHeight: sourceNode.height,\r\n                    targetWidth: targetNode.width,\r\n                    targetHeight: targetNode.height,\r\n                    width: s.width,\r\n                    height: s.height,\r\n                    transform: s.transform,\r\n                }));\r\n        });\r\n    }, [onlyRenderVisible, nodeInternals]));\r\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\r\n}\n\nconst oppositePosition = {\r\n    [Position.Left]: Position.Right,\r\n    [Position.Right]: Position.Left,\r\n    [Position.Top]: Position.Bottom,\r\n    [Position.Bottom]: Position.Top,\r\n};\r\nconst ConnectionLine = ({ connectionNodeId, connectionHandleType, connectionLineStyle, connectionLineType = ConnectionLineType.Bezier, isConnectable, CustomConnectionLineComponent, }) => {\r\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\r\n        fromNode: s.nodeInternals.get(connectionNodeId),\r\n        handleId: s.connectionHandleId,\r\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\r\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\r\n        connectionMode: s.connectionMode,\r\n    }), [connectionNodeId]), shallow);\r\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\r\n    let handleBounds = fromHandleBounds?.[connectionHandleType];\r\n    if (connectionMode === ConnectionMode.Loose) {\r\n        handleBounds = handleBounds\r\n            ? handleBounds\r\n            : fromHandleBounds?.[connectionHandleType === 'source' ? 'target' : 'source'];\r\n    }\r\n    if (!fromNode || !isConnectable || !handleBounds) {\r\n        return null;\r\n    }\r\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\r\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode?.width ?? 0) / 2;\r\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode?.height ?? 0;\r\n    const fromX = (fromNode?.positionAbsolute?.x || 0) + fromHandleX;\r\n    const fromY = (fromNode?.positionAbsolute?.y || 0) + fromHandleY;\r\n    const fromPosition = fromHandle?.position;\r\n    if (!fromPosition) {\r\n        return null;\r\n    }\r\n    const toPosition = oppositePosition[fromPosition];\r\n    if (CustomConnectionLineComponent) {\r\n        return (jsx(\"g\", { className: \"react-flow__connection\", children: jsx(CustomConnectionLineComponent, { connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition }) }));\r\n    }\r\n    let dAttr = '';\r\n    const pathParams = {\r\n        sourceX: fromX,\r\n        sourceY: fromY,\r\n        sourcePosition: fromPosition,\r\n        targetX: toX,\r\n        targetY: toY,\r\n        targetPosition: toPosition,\r\n    };\r\n    if (connectionLineType === ConnectionLineType.Bezier) {\r\n        // we assume the destination position is opposite to the source position\r\n        [dAttr] = getBezierPath(pathParams);\r\n    }\r\n    else if (connectionLineType === ConnectionLineType.Step) {\r\n        [dAttr] = getSmoothStepPath({\r\n            ...pathParams,\r\n            borderRadius: 0,\r\n        });\r\n    }\r\n    else if (connectionLineType === ConnectionLineType.SmoothStep) {\r\n        [dAttr] = getSmoothStepPath(pathParams);\r\n    }\r\n    else if (connectionLineType === ConnectionLineType.SimpleBezier) {\r\n        [dAttr] = getSimpleBezierPath(pathParams);\r\n    }\r\n    else {\r\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\r\n    }\r\n    return (jsx(\"g\", { className: \"react-flow__connection\", children: jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: connectionLineStyle }) }));\r\n};\r\nConnectionLine.displayName = 'ConnectionLine';\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\r\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\r\n};\r\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\r\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\r\n};\r\nconst MarkerSymbols = {\r\n    [MarkerType.Arrow]: ArrowSymbol,\r\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\r\n};\r\nfunction useMarkerSymbol(type) {\r\n    const symbol = useMemo(() => {\r\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\r\n        if (!symbolExists) {\r\n            devWarn(`Marker type \"${type}\" doesn't exist. Help: https://reactflow.dev/error#900`);\r\n            return null;\r\n        }\r\n        return MarkerSymbols[type];\r\n    }, [type]);\r\n    return symbol;\r\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\r\n    const Symbol = useMarkerSymbol(type);\r\n    if (!Symbol) {\r\n        return null;\r\n    }\r\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\r\n};\r\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\r\n    const ids = [];\r\n    return s.edges\r\n        .reduce((markers, edge) => {\r\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\r\n            if (marker && typeof marker === 'object') {\r\n                const markerId = getMarkerId(marker, rfId);\r\n                if (!ids.includes(markerId)) {\r\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\r\n                    ids.push(markerId);\r\n                }\r\n            }\r\n        });\r\n        return markers;\r\n    }, [])\r\n        .sort((a, b) => a.id.localeCompare(b.id));\r\n};\r\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\r\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\r\n// that we can then use for creating our unique marker ids\r\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\r\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \r\n    // the id includes all marker options, so we just need to look at that part of the marker\r\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\r\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\r\n};\r\nMarkerDefinitions.displayName = 'MarkerDefinitions';\r\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$3 = (s) => ({\r\n    connectionNodeId: s.connectionNodeId,\r\n    connectionHandleType: s.connectionHandleType,\r\n    nodesConnectable: s.nodesConnectable,\r\n    edgesFocusable: s.edgesFocusable,\r\n    elementsSelectable: s.elementsSelectable,\r\n    width: s.width,\r\n    height: s.height,\r\n    connectionMode: s.connectionMode,\r\n    nodeInternals: s.nodeInternals,\r\n});\r\nconst EdgeRenderer = (props) => {\r\n    const { connectionNodeId, connectionHandleType, nodesConnectable, edgesFocusable, elementsSelectable, width, height, connectionMode, nodeInternals, } = useStore(selector$3, shallow);\r\n    const edgeTree = useVisibleEdges(props.onlyRenderVisibleElements, nodeInternals, props.elevateEdgesOnSelect);\r\n    if (!width) {\r\n        return null;\r\n    }\r\n    const { connectionLineType, defaultMarkerColor, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, } = props;\r\n    const renderConnectionLine = connectionNodeId && connectionHandleType;\r\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: props.rfId }), jsx(\"g\", { children: edges.map((edge) => {\r\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\r\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\r\n                            if (!sourceIsValid || !targetIsValid) {\r\n                                return null;\r\n                            }\r\n                            let edgeType = edge.type || 'default';\r\n                            if (!props.edgeTypes[edgeType]) {\r\n                                devWarn(`Edge type \"${edgeType}\" not found. Using fallback type \"default\". Help: https://reactflow.dev/error#300`);\r\n                                edgeType = 'default';\r\n                            }\r\n                            const EdgeComponent = props.edgeTypes[edgeType] || props.edgeTypes.default;\r\n                            // when connection type is loose we can define all handles as sources\r\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\r\n                                ? targetHandleBounds.target\r\n                                : targetHandleBounds.target || targetHandleBounds.source;\r\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle || null);\r\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle || null);\r\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\r\n                            const targetPosition = targetHandle?.position || Position.Top;\r\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\r\n                            if (!sourceHandle || !targetHandle) {\r\n                                devWarn(`Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: ${!sourceHandle ? edge.sourceHandle : edge.targetHandle}; edge id: ${edge.id}. Help: https://reactflow.dev/error#800`);\r\n                                return null;\r\n                            }\r\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\r\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, props.noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: props.onEdgeUpdate, onContextMenu: props.onEdgeContextMenu, onMouseEnter: props.onEdgeMouseEnter, onMouseMove: props.onEdgeMouseMove, onMouseLeave: props.onEdgeMouseLeave, onClick: props.onEdgeClick, edgeUpdaterRadius: props.edgeUpdaterRadius, onEdgeDoubleClick: props.onEdgeDoubleClick, onEdgeUpdateStart: props.onEdgeUpdateStart, onEdgeUpdateEnd: props.onEdgeUpdateEnd, rfId: props.rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\r\n                        }) })] }, level))), renderConnectionLine && (jsx(\"svg\", { style: connectionLineContainerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(ConnectionLine, { connectionNodeId: connectionNodeId, connectionHandleType: connectionHandleType, connectionLineStyle: connectionLineStyle, connectionLineType: connectionLineType, isConnectable: nodesConnectable, CustomConnectionLineComponent: connectionLineComponent }) }))] }));\r\n};\r\nEdgeRenderer.displayName = 'EdgeRenderer';\r\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$2 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\r\nfunction Viewport({ children }) {\r\n    const transform = useStore(selector$2);\r\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\r\n}\n\nfunction useOnInitHandler(onInit) {\r\n    const rfInstance = useReactFlow();\r\n    const isInitialized = useRef(false);\r\n    useEffect(() => {\r\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\r\n            setTimeout(() => onInit(rfInstance), 1);\r\n            isInitialized.current = true;\r\n        }\r\n    }, [onInit, rfInstance.viewportInitialized]);\r\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\r\n    useOnInitHandler(onInit);\r\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\r\n};\r\nGraphView.displayName = 'GraphView';\r\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\r\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\r\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\r\n];\r\nconst initialState = {\r\n    rfId: '1',\r\n    width: 0,\r\n    height: 0,\r\n    transform: [0, 0, 1],\r\n    nodeInternals: new Map(),\r\n    edges: [],\r\n    onNodesChange: null,\r\n    onEdgesChange: null,\r\n    hasDefaultNodes: false,\r\n    hasDefaultEdges: false,\r\n    d3Zoom: null,\r\n    d3Selection: null,\r\n    d3ZoomHandler: undefined,\r\n    minZoom: 0.5,\r\n    maxZoom: 2,\r\n    translateExtent: infiniteExtent,\r\n    nodeExtent: infiniteExtent,\r\n    nodesSelectionActive: false,\r\n    userSelectionActive: false,\r\n    userSelectionRect: null,\r\n    connectionNodeId: null,\r\n    connectionHandleId: null,\r\n    connectionHandleType: 'source',\r\n    connectionPosition: { x: 0, y: 0 },\r\n    connectionMode: ConnectionMode.Strict,\r\n    domNode: null,\r\n    paneDragging: false,\r\n    noPanClassName: 'nopan',\r\n    nodeOrigin: [0, 0],\r\n    snapGrid: [15, 15],\r\n    snapToGrid: false,\r\n    nodesDraggable: true,\r\n    nodesConnectable: true,\r\n    nodesFocusable: true,\r\n    edgesFocusable: true,\r\n    elementsSelectable: true,\r\n    elevateNodesOnSelect: true,\r\n    fitViewOnInit: false,\r\n    fitViewOnInitDone: false,\r\n    fitViewOnInitOptions: undefined,\r\n    multiSelectionActive: false,\r\n    connectionStartHandle: null,\r\n    connectOnClick: true,\r\n    ariaLiveMessage: '',\r\n};\n\nconst createRFStore = () => createStore((set, get) => ({\r\n    ...initialState,\r\n    setNodes: (nodes) => {\r\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\r\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\r\n    },\r\n    getNodes: () => {\r\n        return Array.from(get().nodeInternals.values());\r\n    },\r\n    setEdges: (edges) => {\r\n        const { defaultEdgeOptions = {} } = get();\r\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\r\n    },\r\n    setDefaultNodesAndEdges: (nodes, edges) => {\r\n        const hasDefaultNodes = typeof nodes !== 'undefined';\r\n        const hasDefaultEdges = typeof edges !== 'undefined';\r\n        const nodeInternals = hasDefaultNodes\r\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\r\n            : new Map();\r\n        const nextEdges = hasDefaultEdges ? edges : [];\r\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\r\n    },\r\n    updateNodeDimensions: (updates) => {\r\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\r\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\r\n        if (!viewportNode) {\r\n            return;\r\n        }\r\n        const style = window.getComputedStyle(viewportNode);\r\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\r\n        const changes = updates.reduce((res, update) => {\r\n            const node = nodeInternals.get(update.id);\r\n            if (node) {\r\n                const dimensions = getDimensions(update.nodeElement);\r\n                const doUpdate = !!(dimensions.width &&\r\n                    dimensions.height &&\r\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\r\n                if (doUpdate) {\r\n                    nodeInternals.set(node.id, {\r\n                        ...node,\r\n                        [internalsSymbol]: {\r\n                            ...node[internalsSymbol],\r\n                            handleBounds: {\r\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\r\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\r\n                            },\r\n                        },\r\n                        ...dimensions,\r\n                    });\r\n                    res.push({\r\n                        id: node.id,\r\n                        type: 'dimensions',\r\n                        dimensions,\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        }, []);\r\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\r\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\r\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\r\n        if (changes?.length > 0) {\r\n            onNodesChange?.(changes);\r\n        }\r\n    },\r\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\r\n        const { triggerNodeChanges } = get();\r\n        const changes = nodeDragItems.map((node) => {\r\n            const change = {\r\n                id: node.id,\r\n                type: 'position',\r\n                dragging,\r\n            };\r\n            if (positionChanged) {\r\n                change.positionAbsolute = node.positionAbsolute;\r\n                change.position = node.position;\r\n            }\r\n            return change;\r\n        });\r\n        triggerNodeChanges(changes);\r\n    },\r\n    triggerNodeChanges: (changes) => {\r\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\r\n        if (changes?.length) {\r\n            if (hasDefaultNodes) {\r\n                const nodes = applyNodeChanges(changes, getNodes());\r\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\r\n                set({ nodeInternals: nextNodeInternals });\r\n            }\r\n            onNodesChange?.(changes);\r\n        }\r\n    },\r\n    addSelectedNodes: (selectedNodeIds) => {\r\n        const { multiSelectionActive, edges, getNodes } = get();\r\n        let changedNodes;\r\n        let changedEdges = null;\r\n        if (multiSelectionActive) {\r\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\r\n        }\r\n        else {\r\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\r\n            changedEdges = getSelectionChanges(edges, []);\r\n        }\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes,\r\n            changedEdges,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    addSelectedEdges: (selectedEdgeIds) => {\r\n        const { multiSelectionActive, edges, getNodes } = get();\r\n        let changedEdges;\r\n        let changedNodes = null;\r\n        if (multiSelectionActive) {\r\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\r\n        }\r\n        else {\r\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\r\n            changedNodes = getSelectionChanges(getNodes(), []);\r\n        }\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes,\r\n            changedEdges,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\r\n        const { edges: storeEdges, getNodes } = get();\r\n        const nodesToUnselect = nodes ? nodes : getNodes();\r\n        const edgesToUnselect = edges ? edges : storeEdges;\r\n        const changedNodes = nodesToUnselect.map((n) => {\r\n            n.selected = false;\r\n            return createSelectionChange(n.id, false);\r\n        });\r\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes,\r\n            changedEdges,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    setMinZoom: (minZoom) => {\r\n        const { d3Zoom, maxZoom } = get();\r\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\r\n        set({ minZoom });\r\n    },\r\n    setMaxZoom: (maxZoom) => {\r\n        const { d3Zoom, minZoom } = get();\r\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\r\n        set({ maxZoom });\r\n    },\r\n    setTranslateExtent: (translateExtent) => {\r\n        get().d3Zoom?.translateExtent(translateExtent);\r\n        set({ translateExtent });\r\n    },\r\n    resetSelectedElements: () => {\r\n        const { edges, getNodes } = get();\r\n        const nodes = getNodes();\r\n        const nodesToUnselect = nodes\r\n            .filter((e) => e.selected)\r\n            .map((n) => createSelectionChange(n.id, false));\r\n        const edgesToUnselect = edges\r\n            .filter((e) => e.selected)\r\n            .map((e) => createSelectionChange(e.id, false));\r\n        updateNodesAndEdgesSelections({\r\n            changedNodes: nodesToUnselect,\r\n            changedEdges: edgesToUnselect,\r\n            get,\r\n            set,\r\n        });\r\n    },\r\n    setNodeExtent: (nodeExtent) => {\r\n        const { nodeInternals } = get();\r\n        nodeInternals.forEach((node) => {\r\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\r\n        });\r\n        set({\r\n            nodeExtent,\r\n            nodeInternals: new Map(nodeInternals),\r\n        });\r\n    },\r\n    cancelConnection: () => set({\r\n        connectionNodeId: initialState.connectionNodeId,\r\n        connectionHandleId: initialState.connectionHandleId,\r\n    }),\r\n    reset: () => set({ ...initialState }),\r\n}));\n\nconst ReactFlowProvider = ({ children }) => {\r\n    const storeRef = useRef(null);\r\n    if (!storeRef.current) {\r\n        storeRef.current = createRFStore();\r\n    }\r\n    return jsx(Provider$1, { value: storeRef.current, children: children });\r\n};\r\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\r\n    const isWrapped = useContext(StoreContext);\r\n    if (isWrapped) {\r\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\r\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\r\n        return jsx(Fragment, { children: children });\r\n    }\r\n    return jsx(ReactFlowProvider, { children: children });\r\n};\r\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\r\n    const typesKeysRef = useRef(null);\r\n    const typesParsed = useMemo(() => {\r\n        if (process.env.NODE_ENV === 'development') {\r\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\r\n            if (shallow(typesKeysRef.current, typeKeys)) {\r\n                devWarn(\"It looks like you have created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them. Help: https://reactflow.dev/error#200\");\r\n            }\r\n            typesKeysRef.current = typeKeys;\r\n        }\r\n        return createTypes(nodeOrEdgeTypes);\r\n    }, [nodeOrEdgeTypes]);\r\n    return typesParsed;\r\n}\n\nconst defaultNodeTypes = {\r\n    input: InputNode$1,\r\n    default: DefaultNode$1,\r\n    output: OutputNode$1,\r\n    group: GroupNode,\r\n};\r\nconst defaultEdgeTypes = {\r\n    default: BezierEdge,\r\n    straight: StraightEdge,\r\n    step: StepEdge,\r\n    smoothstep: SmoothStepEdge,\r\n    simplebezier: SimpleBezierEdge,\r\n};\r\nconst initNodeOrigin = [0, 0];\r\nconst initSnapGrid = [15, 15];\r\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\r\nconst wrapperStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    zIndex: 0,\r\n};\r\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = 'Meta', zoomActivationKeyCode = 'Meta', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, style, id, ...rest }, ref) => {\r\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\r\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\r\n    const rfId = id || '1';\r\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypesWrapped, edgeTypes: edgeTypesWrapped, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\r\n});\r\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\r\nfunction EdgeLabelRenderer({ children }) {\r\n    const edgeLabelRenderer = useStore(selector$1);\r\n    if (!edgeLabelRenderer) {\r\n        return null;\r\n    }\r\n    return createPortal(children, edgeLabelRenderer);\r\n}\n\nfunction useUpdateNodeInternals() {\r\n    const store = useStoreApi();\r\n    return useCallback((id) => {\r\n        const { domNode, updateNodeDimensions } = store.getState();\r\n        const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\r\n        if (nodeElement) {\r\n            requestAnimationFrame(() => updateNodeDimensions([{ id, nodeElement, forceUpdate: true }]));\r\n        }\r\n    }, []);\r\n}\n\nconst nodesSelector = (state) => state.getNodes();\r\nfunction useNodes() {\r\n    const nodes = useStore(nodesSelector);\r\n    return nodes;\r\n}\n\nconst edgesSelector = (state) => state.edges;\r\nfunction useEdges() {\r\n    const edges = useStore(edgesSelector);\r\n    return edges;\r\n}\n\nconst viewportSelector = (state) => ({\r\n    x: state.transform[0],\r\n    y: state.transform[1],\r\n    zoom: state.transform[2],\r\n});\r\nfunction useViewport() {\r\n    const viewport = useStore(viewportSelector, shallow);\r\n    return viewport;\r\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nfunction createUseItemsState(applyChanges) {\r\n    return (initialItems) => {\r\n        const [items, setItems] = useState(initialItems);\r\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\r\n        return [items, setItems, onItemsChange];\r\n    };\r\n}\r\nconst useNodesState = createUseItemsState(applyNodeChanges);\r\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        store.setState({ onViewportChangeStart: onStart });\r\n    }, [onStart]);\r\n    useEffect(() => {\r\n        store.setState({ onViewportChange: onChange });\r\n    }, [onChange]);\r\n    useEffect(() => {\r\n        store.setState({ onViewportChangeEnd: onEnd });\r\n    }, [onEnd]);\r\n}\n\nfunction useOnSelectionChange({ onChange }) {\r\n    const store = useStoreApi();\r\n    useEffect(() => {\r\n        store.setState({ onSelectionChange: onChange });\r\n    }, [onChange]);\r\n}\n\nconst selector = (s) => {\r\n    if (s.nodeInternals.size === 0) {\r\n        return false;\r\n    }\r\n    return s.getNodes().every((n) => n[internalsSymbol]?.handleBounds !== undefined);\r\n};\r\nfunction useNodesInitialized() {\r\n    const initialized = useStore(selector);\r\n    return initialized;\r\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
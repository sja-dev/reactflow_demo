{"ast":null,"code":"var _jsxFileName = \"/Users/leejeesung/GitHub/flowchart_demo/src/App.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport ReactFlow, { addEdge, applyEdgeChanges, applyNodeChanges, MiniMap, Controls, Background, useReactFlow, ReactFlowProvider } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport DatasetNode from './nodes/dataset/DatasetNode.js';\nimport TargetNode from './nodes/preprocessing/target/TargetNode.js';\nimport './nodes/dataset/dataset-node.css';\nimport './nodes/preprocessing/target/target-node.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: 'node-1',\n  type: 'datasetnode',\n  position: {\n    x: 0,\n    y: 0\n  }\n}, {\n  id: 'node-2',\n  type: 'targetnode',\n  targetPosition: 'top',\n  position: {\n    x: 200,\n    y: 0\n  },\n  data: {\n    label: 'node 2'\n  },\n  sourcePosition: 'right',\n  targetPosition: 'left'\n}];\nconst initialEdges = [{\n  id: 'edge-1',\n  source: 'node-1',\n  target: 'node-2',\n  sourceHandle: 'a'\n}];\n\n// we define the nodeTypes outside of the component to prevent re-renderings\n// you could also use useMemo inside the component\nconst nodeTypes = {\n  datasetnode: DatasetNode,\n  targetnode: TargetNode\n};\nlet nodeId = 0;\nfunction Flow() {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const onNodesChange = useCallback(changes => setNodes(nds => applyNodeChanges(changes, nds)), [setNodes]);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), [setEdges]);\n  const onConnect = useCallback(connection => setEdges(eds => addEdge(connection, eds)), [setEdges]);\n  const reactFlowInstance = useReactFlow();\n  const onClick = useCallback(() => {\n    const id = `${++nodeId}`;\n    const newNode = {\n      id,\n      position: {\n        x: Math.random() * 500,\n        y: Math.random() * 500\n      },\n      type: 'datasetnode'\n    };\n    reactFlowInstance.addNodes(newNode);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=JetBrains+Mono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#1C1C1C',\n        height: 810,\n        width: '15%',\n        marginLeft: 0,\n        marginRight: 'auto',\n        float: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        style: {\n          position: 'absolute'\n        },\n        children: \"Add Dataset Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 94\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 99\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 104\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 109\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 119\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 124\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 129\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        style: {\n          position: 'absolute'\n        },\n        children: \"Add Dataset Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 810,\n        width: '85%',\n        marginLeft: 'auto',\n        marginRight: 0,\n        float: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        style: {\n          backgroundColor: '#1C1C1C'\n        },\n        children: /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Flow, \"1NzUtJKkHMgiY2CffM1m19A2aQc=\", false, function () {\n  return [useReactFlow];\n});\n_c = Flow;\nexport default function () {\n  return /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n    children: /*#__PURE__*/_jsxDEV(Flow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\nvar _c;\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["useCallback","useState","ReactFlow","addEdge","applyEdgeChanges","applyNodeChanges","MiniMap","Controls","Background","useReactFlow","ReactFlowProvider","DatasetNode","TargetNode","initialNodes","id","type","position","x","y","targetPosition","data","label","sourcePosition","initialEdges","source","target","sourceHandle","nodeTypes","datasetnode","targetnode","nodeId","Flow","nodes","setNodes","edges","setEdges","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","connection","reactFlowInstance","onClick","newNode","Math","random","addNodes","backgroundColor","height","width","marginLeft","marginRight","float"],"sources":["/Users/leejeesung/GitHub/flowchart_demo/src/App.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  applyEdgeChanges,\n  applyNodeChanges,\n  MiniMap,\n  Controls,\n  Background,\n  useReactFlow,\n  ReactFlowProvider\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport DatasetNode from './nodes/dataset/DatasetNode.js';\nimport TargetNode from './nodes/preprocessing/target/TargetNode.js';\n\nimport './nodes/dataset/dataset-node.css';\nimport './nodes/preprocessing/target/target-node.css';\n\nconst initialNodes = [\n  {\n    id: 'node-1',\n    type: 'datasetnode',\n    position: { x: 0, y: 0 }\n  },\n  {\n    id: 'node-2',\n    type: 'targetnode',\n    targetPosition: 'top',\n    position: { x: 200, y: 0 },\n    data: { label: 'node 2' },\n    sourcePosition: 'right',\n    targetPosition: 'left'\n  }\n];\n\nconst initialEdges = [\n  { id: 'edge-1', source: 'node-1', target: 'node-2', sourceHandle: 'a' },\n];\n\n// we define the nodeTypes outside of the component to prevent re-renderings\n// you could also use useMemo inside the component\nconst nodeTypes = { \n  datasetnode: DatasetNode,\n  targetnode: TargetNode\n};\n\nlet nodeId = 0\n\nfunction Flow() {\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n\n  const onNodesChange = useCallback(\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\n    [setNodes]\n  );\n  const onEdgesChange = useCallback(\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    [setEdges]\n  );\n  const onConnect = useCallback(\n    (connection) => setEdges((eds) => addEdge(connection, eds)),\n    [setEdges]\n  );\n\n  const reactFlowInstance = useReactFlow();\n  const onClick = useCallback(() => {\n    const id = `${++nodeId}`;\n    const newNode = {\n      id,\n      position: {\n        x: Math.random() * 500,\n        y: Math.random() * 500,\n      },\n      type: 'datasetnode'\n    };\n    reactFlowInstance.addNodes(newNode);\n  }, []);\n\n  return (\n    <>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=JetBrains+Mono\" />\n      <div style={{ backgroundColor: '#1C1C1C', height: 810, width: '15%', marginLeft: 0, marginRight: 'auto', float: 'left' }}>\n        <button onClick={onClick} style={{ position: 'absolute' }}>\n          Add Dataset Node\n        </button>\n        <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n        <button onClick={onClick} style={{ position: 'absolute' }}>\n          Add Dataset Node\n        </button>\n      </div>\n      <div style={{ height: 810, width: '85%', marginLeft: 'auto', marginRight: 0, float: 'right' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          nodeTypes={nodeTypes}\n          fitView\n          style={{ backgroundColor: '#1C1C1C' }}\n        >\n          <Background />\n        </ReactFlow>\n      </div>\n    </>\n  );\n}\n\nexport default function () {\n  return (\n    <ReactFlowProvider>\n      <Flow />\n    </ReactFlowProvider>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}